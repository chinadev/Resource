.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "KITCOMPONENT.7 7"
.TH KITCOMPONENT.7 7 "2013-07-22" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
\&\fBkitcomponent\fR \- a logical object definition in the xCAT database.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBkitcomponent Attributes:\fR  \fIbasename\fR, \fIdescription\fR, \fIdriverpacks\fR, \fIexlist\fR, \fIkitcompdeps\fR, \fIkitcompname\fR, \fIkitname\fR, \fIkitpkgdeps\fR, \fIkitreponame\fR, \fIpostbootscripts\fR, \fIrelease\fR, \fIserverroles\fR, \fIversion\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Logical objects of this type are stored in the xCAT database in one or more tables.  Use the following commands
to manipulate the objects: \fBmkdef\fR, \fBchdef\fR, \fBlsdef\fR, and \fBrmdef\fR.  These commands will take care of
knowing which tables the object attributes should be stored in.  The attribute list below shows, in
parentheses, what tables each attribute is stored in.
.SH "kitcomponent Attributes:"
.IX Header "kitcomponent Attributes:"
.IP "\fBbasename\fR (kitcomponent.basename)" 6
.IX Item "basename (kitcomponent.basename)"
Kit Component basename.
.IP "\fBdescription\fR (kitcomponent.description)" 6
.IX Item "description (kitcomponent.description)"
The Kit component description.
.IP "\fBdriverpacks\fR (kitcomponent.driverpacks)" 6
.IX Item "driverpacks (kitcomponent.driverpacks)"
Comma-separated List of driver package names. These must be full names like: pkg1\-1.0\-1.x86_64.rpm.
.IP "\fBexlist\fR (kitcomponent.exlist)" 6
.IX Item "exlist (kitcomponent.exlist)"
Exclude list file containing the files/directories to exclude when building a diskless image.
.IP "\fBkitcompdeps\fR (kitcomponent.kitcompdeps)" 6
.IX Item "kitcompdeps (kitcomponent.kitcompdeps)"
Comma-separated list of kit components that this kit component depends on.
.IP "\fBkitcompname\fR (kitcomponent.kitcompname)" 6
.IX Item "kitcompname (kitcomponent.kitcompname)"
The unique Kit Component name. It is auto-generated when the parent Kit is added to the cluster.
.IP "\fBkitname\fR (kitcomponent.kitname)" 6
.IX Item "kitname (kitcomponent.kitname)"
The Kit name which this Kit Component belongs to.
.IP "\fBkitpkgdeps\fR (kitcomponent.kitpkgdeps)" 6
.IX Item "kitpkgdeps (kitcomponent.kitpkgdeps)"
Comma-separated list of packages that this kit component depends on.
.IP "\fBkitreponame\fR (kitcomponent.kitrepoid)" 6
.IX Item "kitreponame (kitcomponent.kitrepoid)"
.PD 0
.IP "\fBpostbootscripts\fR (kitcomponent.postbootscripts)" 6
.IX Item "postbootscripts (kitcomponent.postbootscripts)"
.PD
Comma-separated list of postbootscripts that will run during the node boot.
.IP "\fBrelease\fR (kitcomponent.release)" 6
.IX Item "release (kitcomponent.release)"
Kit Component release.
.IP "\fBserverroles\fR (kitcomponent.serverroles)" 6
.IX Item "serverroles (kitcomponent.serverroles)"
The types of servers that this Kit Component can install on.  Valid types are: mgtnode, servicenode, compute
.IP "\fBversion\fR (kitcomponent.version)" 6
.IX Item "version (kitcomponent.version)"
Kit Component version.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fB\f(BImkdef\fB\|(1)\fR, \fB\f(BIchdef\fB\|(1)\fR, \fB\f(BIlsdef\fB\|(1)\fR, \fB\f(BIrmdef\fB\|(1)\fR
