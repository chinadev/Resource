.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "MAKENETWORKS.8 8"
.TH MAKENETWORKS.8 8 "2013-02-06" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
\&\fBmakenetworks\fR \- Gather cluster network information and add it to the xCAT database.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fImakenetworks [\-h|\-\-help ]\fR
.PP
\&\fImakenetworks [\-v| \-\-version]\fR
.PP
\&\fImakenetworks [\-V|\-\-verbose] [\-d|\-\-display]\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \fBmakenetworks\fR command can be used to gather network information from an xCAT cluster environment and create corresponding network definitions in the xCAT database.
.PP
Every network that will be used to install a cluster node must be defined in the xCAT database.
.PP
The default behavior is to gather network information from the managment node, and any configured xCAT service nodes, and automatically save this information in the xCAT database.
.PP
You can use the \*(L"\-d\*(R" option to display the network information without writing it to the database.
.PP
You can also redirect the output to a file that can be used with the xCAT \fBmkdef\fR command to define the networks.
.PP
For example:
.PP
.Vb 1
\&        makenetworks -d > mynetstanzas
.Ve
.PP
.Vb 1
\&        cat mynetstanzas | mkdef -z
.Ve
.PP
This features allows you to verify and modify the network information before writing it to the database.
.PP
When the network information is gathered a default value is created for the \*(L"netname\*(R" attribute.  This is done to make it possible to use the mkdef, chdef, lsdef, and rmdef commands to manage this data.
.PP
The default naming convention is to use a hyphen separated \*(L"net\*(R" and \*(L"mask\*(R" value with the \*(L".\*(R" replace by \*(L"_\*(R". (ex. \*(L"8_124_47_64\-255_255_255_0\*(R")
.PP
You can also modify the xCAT \*(L"networks\*(R" database table directly using the xCAT \fBtabedit\fR command.
.PP
.Vb 1
\&        tabedit networks
.Ve
.PP
Note: The \fBmakenetworks\fR command is run automatically when xCAT is installed on a Linux management node.
.SH "OPTIONS"
.IX Header "OPTIONS"
\&\fB\-d|\-\-display\fR       Display the network definitions but do not write to the definitions to the xCAT database. The output will be in stanza file format and can be redirected to a stanza file that can be used with \fBmkdef\fR or \fBchdef\fR commands to create or modify the network definitions.
.PP
\&\fB\-h | \-\-help\fR         Display usage message.
.PP
\&\fB\-v | \-\-version\fR      Command Version.
.PP
\&\fB\-V |\-\-verbose\fR       Verbose mode.
.SH "RETURN VALUE"
.IX Header "RETURN VALUE"
0 The command completed successfully.
.PP
1 An error has occurred.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
1.  Gather cluster network information and create xCAT network definitions.
.PP
.Vb 1
\&        makenetworks
.Ve
.PP
2.  Display cluster network information but do not write the network definitions to the xCAT database.
.PP
.Vb 1
\&        makenetworks -d
.Ve
.PP
The output would be one or more stanzas of information similar to the following. The line that ends with a colon is the value of the \*(L"netname\*(R" attribute and is the name of the network object to use with the lsdef, mkdef, chdef and rmdef commands.
.PP
9_114_37_0\-255_255_255_0:
    objtype=network
    gateway=9.114.37.254
    mask=255.255.255.0
    net=9.114.37.0
.SH "FILES"
.IX Header "FILES"
/opt/xcat/sbin/makenetworks
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fImakedhcp\fR\|(8)
