.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "TABDUMP.8 8"
.TH TABDUMP.8 8 "2013-02-06" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
\&\fBtabdump\fR \- display an xCAT database table in CSV format.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBtabdump\fR [\fI\-d\fR] [\fItable\fR]
.PP
\&\fBtabdump\fR [\fItable\fR]
.PP
\&\fBtabdump\fR [\fI\-f\fR \fIfilename\fR] [\fItable\fR]
.PP
\&\fBtabdump\fR [\fI\-w\fR \fIattr\fR==\fIval\fR] [\fB\-w\fR \fIattr\fR=~\fIval\fR] ...] [\fItable\fR]
.PP
\&\fBtabdump\fR [\fI\-w\fR \fIattr\fR==\fIval\fR] [\fB\-w\fR \fIattr\fR=~\fIval\fR] ...] [\fI\-f\fR \fIfilename\fR] [\fItable\fR]
.PP
\&\fBtabdump\fR [\fI\-v\fR | \fI\-\-version\fR]
.PP
\&\fBtabdump\fR [\fI\-?\fR | \fI\-h\fR | \fI\-\-help\fR]
.PP
\&\fBtabdump\fR 
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The tabdump command displays the header and all the rows of the specified table in \s-1CSV\s0 (comma separated values) format.
Only one table can be specified.  If no table is specified, the list of existing
tables will be displayed.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-?|\-h|\-\-help\fR" 10
.IX Item "-?|-h|--help"
Display usage message.
.IP "\fB\-d\fR" 10
.IX Item "-d"
Show descriptions of the tables, instead of the contents of the tables.  If a table name is also specified, descriptions of the columns (attributes) of the table will be displayed.  Otherwise, a summary of each table will be displayed.
.IP "\fB\-w\fR \fI'attr==val'\fR \fB\-w\fR \fI'attr=~val'\fR ..." 10
.IX Item "-w 'attr==val' -w 'attr=~val' ..."
Use one or multiple \-w flags to specify the selection string that can be used to select particular rows of the table. See examples.
.Sp
Operator descriptions:
.Sp
.Vb 8
\&        ==        Select nodes where the attribute value is exactly this value.
\&        !=        Select nodes where the attribute value is not this specific value.
\&        >         Select nodes where the attribute value is greater than this  specific value.
\&        >=        Select nodes where the attribute value is greater than or equal to this  specific value.
\&        <         Select nodes where the attribute value is less than this  specific value.
\&        <=        Select nodes where the attribute value is less than or equal to this  specific value.
\&        =~        Select nodes where the attribute value matches the SQL LIKE value.
\&        !~        Select nodes where the attribute value matches the SQL NOT LIKE value.
.Ve
.IP "\fB\-f\fR" 10
.IX Item "-f"
File name or path to file in which to dump the table. Without this the table is dumped
to stdout.  Using the \-f flag allows the table to be dumped one record at a time. If tables are very large, dumping to stdout can cause problems such as running out of memory. 
.SH "RETURN VALUE"
.IX Header "RETURN VALUE"
.IP "0" 3
The command completed successfully.
.IP "1" 3
.IX Item "1"
An error has occurred.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.IP "\(bu" 2
To display the contents of the site table:
.Sp
\&\fBtabdump\fR \fBsite\fR
.IP "\(bu" 2
To display the contents of the nodelist table where the groups attribute is compute :
.Sp
\&\fBtabdump\fR  \fB\-w 'groups==compute'\fR \fBnodelist\fR
.IP "\(bu" 2
To display the contents of the nodelist table where the groups attribute is comput% where % is a wildcard and can represent any string  and the status attribute is booted :
.Sp
\&\fBtabdump\fR  \fB\-w 'groups=~comput%'\fR \fB\-w 'status==booted'\fR \fBnodelist\fR
.IP "\(bu" 2
To display the records of the auditlog on date  2011\-04\-18 11:30:00 :
.Sp
\&\fBtabdump\fR   \fB\-w 'audittime==2011\-04\-18 11:30:00'\fR \fBauditlog\fR
.IP "\(bu" 2
To display the records of the auditlog starting on 2011\-04\-18:
.Sp
tabdump \-w 'audittime>2011\-04\-18 11:30:00' auditlog
.IP "\(bu" 2
To see what tables exist in the xCAT database:
.Sp
\&\fBtabdump\fR
.IP "\(bu" 2
To back up all the xCAT database tables, instead of running \fBtabdump\fR multiple times, you can use the \fBdumpxCATdb\fR command as follows:
.Sp
\&\fBdumpxCATdb \-p /tmp/xcatbak \fR
.Sp
See the \fBdumpxCATdb\fR man page for details.
.IP "\(bu" 2
To display a summary description of each table:
.Sp
\&\fBtabdump\fR \fB\-d\fR
.IP "\(bu" 2
To display a description of each column in the nodehm table:
.Sp
\&\fBtabdump\fR \fB\-d nodehm\fR
.SH "FILES"
.IX Header "FILES"
/opt/xcat/sbin/tabdump
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fItabrestore\fR\|(8), \fItabedit\fR\|(8), \fIdumpxCATdb\fR\|(1)
