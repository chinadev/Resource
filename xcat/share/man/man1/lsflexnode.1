.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "LSFLEXNODE.1 1"
.TH LSFLEXNODE.1 1 "2013-02-06" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
\&\fBlsflexnode\fR \- Display the information of flexible node
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBlsflexnode\fR [\-h | \-\-help]
.PP
\&\fBlsflexnode\fR [\-v | \-\-version]
.PP
\&\fBlsflexnode\fR \fInoderange\fR 
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\s-1IBM\s0 BladeCenter \s-1HX5\s0 offers flexibility ideal that the blades can be combined together for scalability. 
.PP
There are several concepts to support the \s-1HX5\s0 multiple blades combination:
.Sp
.RS 2
\&\fBComplex\fR: Multiple blades which combined by a scalability card is a complex. 
.Sp
\&\fBParition\fR: A logic concept which containing part of the \fBBlade slot node\fR in a complex. Each partition can map to a system to install Operating System. Each partition could have 1HX5, 1HX5+1MD or 2HX5+2MD. (\s-1MD\s0 is the Memory Drawer)
.Sp
\&\fBBlade slot node\fR: The physical blade which installed in the slot of a chassis. It can be a \s-1HX5\s0 or \s-1MD\s0.
.RE
.PP
A \fBComplex\fR will be created automatically when a multiple blades combination is installed. In this \fBComplex\fR, every blade belongs to it is working as a \fBBlade slot node\fR. 
.PP
A \fBPartition\fR can be created base on the \fBComplex\fR, each \fBPartition\fR can have one or multiple \fBBlade slot node\fR.
.PP
The \fInoderange\fR in the \fB\s-1SYNOPSIS\s0\fR can be a \s-1AMM\s0 node or a blade node.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-h | \-\-help\fR" 17
.IX Item "-h | --help"
Display the usage message.
.IP "\fB\-v | \-\-version\fR" 17
.IX Item "-v | --version"
Display the version information.
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
The meaning of attributes which displayed by the \fBlsflexnode\fR. The word 'node' in this section means \fBBlade slot node\fR.
.IP "\fBComplex\fR" 4
.IX Item "Complex"
The unique numeric identifier for a complex installed in the chassis.
.IP "\fBPartition number\fR" 4
.IX Item "Partition number"
The number of partitions currently defined for this complex.
.IP "\fBComplex node number\fR" 4
.IX Item "Complex node number"
The number of nodes existing in this complex, regardless of their assignment to any given partition.
.IP "\fBPartition\fR" 4
.IX Item "Partition"
The unique numeric identifier for a partition defined within a complex installed in the chassis.
.IP "\fBPartition Mode\fR" 4
.IX Item "Partition Mode"
The currently configured mode of this partition. It can be 'partition' or 'standalone'.
.IP "\fBPartition node number\fR" 4
.IX Item "Partition node number"
The number of nodes currently defined for this partition.
.IP "\fBPartition status\fR" 4
.IX Item "Partition status"
The current power status of this partition when the partition has a valid partition configuration. It can be 'poweredoff', 'poweredon', 'resetting' or 'invalid'.
.IP "\fBNode\fR" 4
.IX Item "Node"
The unique numeric identifier for this node, unique within the partition. If this node does not belong to a partition, the slot number will be displayed.
.IP "\fBNode state\fR" 4
.IX Item "Node state"
The physical power state of this node. It can be 'poweredoff', 'poweredon' or 'resetting'.
.IP "\fBNode slot\fR" 4
.IX Item "Node slot"
The base slot number where the node exists in the chassis.
.IP "\fBNode resource\fR" 4
.IX Item "Node resource"
A string providing a summary overview of the resources provided by this node. It includes the \s-1CPU\s0 number, \s-1CPU\s0 frequency and Memory size.
.IP "\fBNode type\fR" 4
.IX Item "Node type"
The general categorization of the node. It can be 'processor', 'memory' or 'io'.
.IP "\fBNode role\fR" 4
.IX Item "Node role"
Indicates if the node is assigned to a partition, and if so, provides an indication of whether the node is the primary node of the partition or not.
.IP "\fBFlexnode state\fR" 4
.IX Item "Flexnode state"
The state of a flexible node. It is the state of the partition which this node belongs to. If this node does \s-1NOT\s0 belong to a partition, the value should be 'invalid'.
.Sp
It can be 'poweredoff', 'poweredon', 'resetting' or 'invalid'.
.IP "\fBComplex id\fR" 4
.IX Item "Complex id"
The identifier of the complex this node belongs to.
.IP "\fBPartition id\fR" 4
.IX Item "Partition id"
The identifier of the partition this node belongs to.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.IP "1" 3
.IX Item "1"
Display all the \fBComplex\fR, \fBPartition\fR and \fBBlade slot node\fR which managed by a \s-1AMM\s0.
.Sp
.Vb 1
\& lsflexnode amm1
.Ve
.Sp
The output:
.Sp
.Vb 20
\&    amm1: Complex - 24068
\&    amm1: ..Partition number - 1
\&    amm1: ..Complex node number - 2
\&    amm1: ..Partition = 1
\&    amm1: ....Partition Mode - partition
\&    amm1: ....Partition node number - 1
\&    amm1: ....Partition status - poweredoff
\&    amm1: ....Node - 0 (logic id)
\&    amm1: ......Node state - poweredoff
\&    amm1: ......Node slot - 14
\&    amm1: ......Node type - processor
\&    amm1: ......Node resource - 2 (1866 MHz) / 8 (2 GB)
\&    amm1: ......Node role - secondary
\&    amm1: ..Partition = unassigned
\&    amm1: ....Node - 13 (logic id)
\&    amm1: ......Node state - poweredoff
\&    amm1: ......Node slot - 13
\&    amm1: ......Node type - processor
\&    amm1: ......Node resource - 2 (1866 MHz) / 8 (2 GB)
\&    amm1: ......Node role - unassigned
.Ve
.IP "2" 3
.IX Item "2"
Display a flexible node.
.Sp
.Vb 1
\& lsflexnode blade1
.Ve
.Sp
The output:
.Sp
.Vb 8
\&    blade1: Flexnode state - poweredoff
\&    blade1: Complex id - 24068
\&    blade1: Partition id - 1
\&    blade1: Slot14: Node state - poweredoff
\&    blade1: Slot14: Node slot - 14
\&    blade1: Slot14: Node type - processor
\&    blade1: Slot14: Node resource - 2 (1866 MHz) / 8 (2 GB)
\&    blade1: Slot14: Node role - secondary
.Ve
.SH "FILES"
.IX Header "FILES"
/opt/xcat/bin/lsflexnode
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fImkflexnode\fR\|(1), \fIrmflexnode\fR\|(1)
