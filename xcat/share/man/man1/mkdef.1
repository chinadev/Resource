.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "MKDEF.1 1"
.TH MKDEF.1 1 "2013-04-08" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
\&\fBmkdef\fR \- Use this command to create xCAT data object definitions.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBmkdef\fR [\fB\-h\fR|\fB\-\-help\fR] [\fB\-t\fR \fIobject-types\fR]
.PP
\&\fBmkdef\fR [\fB\-V\fR|\fB\-\-verbose\fR] [\fB\-t\fR \fIobject-types\fR] [\fB\-o\fR \fIobject-names\fR]
[\fB\-z\fR|\fB\-\-stanza\fR] [\fB\-d\fR|\fB\-\-dynamic\fR] [\fB\-f\fR|\fB\-\-force\fR]
[[\fB\-w\fR \fIattr\fR==\fIval\fR] [\fB\-w\fR \fIattr\fR=~\fIval\fR] ...] [\fInoderange\fR] [\fIattr\fR=\fIval\fR [\fIattr\fR=\fIval...\fR]]
      [\fB\-u\fR \fBprovmethod\fR=<\fIinstall\fR|\fInetboot\fR|\fIstatelite\fR> \fBprofile\fR=<xxx> [\fIattr\fR=\fIvalue\fR]]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This command is used to create xCAT object definitions which are stored in the xCAT database. If the definition already exists it will return an error message. The force option may be used to re-create a definition.  In this case the old definition will be remove and the new definition will be created.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fIattr=val [attr=val ...]\fR" 10
.IX Item "attr=val [attr=val ...]"
Specifies one or more \*(L"attribute equals value\*(R" pairs, separated by spaces. Attr=val pairs must be specified last on the command line. Use the help option to get a list of valid attributes for each object type.
.Sp
Note: when creating node object definitions, the 'groups' attribute is required.
.IP "\fB\-d|\-\-dynamic\fR" 10
.IX Item "-d|--dynamic"
Use the dynamic option to create dynamic node groups. This option must be used with \-w option.
.IP "\fB\-f|\-\-force\fR" 10
.IX Item "-f|--force"
Use the force option to re-create object definitions. This option removes the old definition before creating the new one.
.IP "\fB\-h|\-\-help\fR" 10
.IX Item "-h|--help"
Display usage message.
.IP "\fInoderange\fR" 10
.IX Item "noderange"
A set of comma delimited node names and/or group names. (must be the first parameter) See the \*(L"noderange\*(R" man page for details on supported formats.
.IP "\fB\-o\fR \fIobject-names\fR" 10
.IX Item "-o object-names"
A set of comma delimited object names.
.IP "\fB\-t\fR \fIobject-types\fR" 10
.IX Item "-t object-types"
A set of comma delimited object types.  Use the help option to get a list of valid object types.
.IP "\fB\-V|\-\-verbose\fR" 10
.IX Item "-V|--verbose"
Verbose mode.
.IP "\fB\-w\fR \fIattr==val\fR \fB\-w\fR \fIattr=~val\fR ..." 10
.IX Item "-w attr==val -w attr=~val ..."
Use one or multiple \-w flags to specify the selection string that can be used to select objects. The operators ==, !=, =~ and !~ are available. For mkdef commmand, the \-w flag only makes sense for creating dynamic node group. Use the help option to get a list of valid attributes for each object type.
.Sp
Operator descriptions:
        ==        Select nodes where the attribute value is exactly this value.
        !=        Select nodes where the attribute value is not this specific value.
        =~        Select nodes where the attribute value matches this regular expression.
        !~        Select nodes where the attribute value does not match this regular expression.
.Sp
Note: if the \*(L"val\*(R" fields includes spaces or any other characters that will be parsed by shell, the \*(L"attr<operator>val\*(R" needs to be quoted. If the operator is \*(L"!~\*(R", the \*(L"attr<operator>val\*(R" needs to be quoted using single quote.
.IP "\fB\-z|\-\-stanza\fR" 10
.IX Item "-z|--stanza"
Indicates that the file being piped to the command is in stanza format.  See the xcatstanzafile man page for details on using xCAT stanza files.
.IP "\fB\-u\fR" 10
.IX Item "-u"
This option only works for objtype \fBosimage\fR.
.Sp
Fill in the osimage attribute automatically when define osimage. The \fIprovmethod\fR and \fIprofile\fR must be specified. If osvers or osarch is not specified, the corresponding value of the management node will be used.
.SH "RETURN VALUE"
.IX Header "RETURN VALUE"
0 The command completed successfully.
.PP
1 An error has occurred.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.IP "1." 3
To create a site definition.
.Sp
.Vb 1
\& mkdef -t site -o clustersite  installdir=/xcatinstall
.Ve
.IP "2." 3
To create a basic node definition.
.Sp
.Vb 1
\& mkdef -t node -o node01 groups="all,aix"
.Ve
.IP "3." 3
To re-create the current definition of \*(L"node01\*(R".
.Sp
.Vb 1
\& mkdef -f -t node -o node01  nodetype=osi groups="linux"
.Ve
.Sp
(The group definitions are also created if they don't already exist.)
.IP "4." 3
To create a set of different types of definitions based on information contained in a stanza file.
.Sp
.Vb 1
\& cat defstanzafile | mkdef -z
.Ve
.IP "5." 3
To create a group definition called LinuxNodes containing the nodes clstrn01 and clstrn02.
.Sp
.Vb 1
\& mkdef -t group -o LinuxNodes members="clstrn01,clstrn02"
.Ve
.IP "6." 3
To create a node definition for an \s-1FSP\s0 node using the attributes provided by the group fspnodes.
.Sp
.Vb 1
\& mkdef -t node fspn1 groups=fspnodes nodetype=fsp
.Ve
.IP "7." 3
To create node definitions for a set of node host names contained in the node range \*(L"node1,node2,node3\*(R"
.Sp
.Vb 1
\& mkdef -t node node1,node2,node3 power=hmc groups="all,aix"
.Ve
.IP "8." 3
To create a dynamic node group definition called HMCMgtNodes containing all the \s-1HMC\s0 managed nodes"
.Sp
.Vb 1
\& mkdef -t group -o HMCMgtNodes -d -w mgt==hmc -w cons==hmc
.Ve
.IP "9." 3
To create a dynamic node group definition called SLESNodes containing all the \s-1SLES\s0 nodes
.Sp
.Vb 1
\& mkdef -t group -o SLESNodes -d -w "os=~^sles[0-9]+$"
.Ve
.IP "10." 3
.IX Item "10."
To create a entry (7.0) in the policy table for user admin1 
.Sp
.Vb 1
\& mkdef -t policy -o 7.0 name=admin1 rule=allow
.Ve
.IP "11." 3
.IX Item "11."
To create a node definition with nic attributes
.Sp
.Vb 1
\& mkdef -t node cn1 groups=all nicips.eth0="1.1.1.1|1.2.1.1" nicnetworks.eth0="net1|net2" nictypes.eth0="Ethernet"
.Ve
.IP "12." 3
.IX Item "12."
To create an osimage definition and fill in attributes automatically.
.Sp
.Vb 1
\& mkdef redhat6img -u profile=compute provmethod=statelite
.Ve
.SH "FILES"
.IX Header "FILES"
$XCATROOT/bin/mkdef
.PP
(The \s-1XCATROOT\s0 environment variable is set when xCAT is installed. The
default value is \*(L"/opt/xcat\*(R".)
.SH "NOTES"
.IX Header "NOTES"
This command is part of the xCAT software product.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIchdef\fR\|(1), \fIlsdef\fR\|(1), \fIrmdef\fR\|(1), \fIxcatstanzafile\fR\|(5)
