.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "RMIGRATE.1 1"
.TH RMIGRATE.1 1 "2013-02-18" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "Name"
.IX Header "Name"
\&\fBrmigrate\fR \- Execute migration of a guest \s-1VM\s0 between hosts/hypervisors
.SH "\fBSynopsis\fP"
.IX Header "Synopsis"
\&\fBrmigrate\fR \fInoderange\fR \fItarget_host\fR
.Sh "For zVM:"
.IX Subsection "For zVM:"
\&\fBrmigrate\fR \fInoderange\fR [\fBdestination=\fR\fItarget_host\fR] [\fBaction=\fR\fIaction\fR] [\fBforce=\fR\fIforce\fR] [\fBimmediate=\fR\fIyes_no\fR] [\fBmax_total=\fR\fItotal\fR] [\fBmax_quiesce=\fR\fIquiesce\fR]
.SH "\fBDescription\fP"
.IX Header "Description"
\&\fBrmigrate\fR requests that a guest \s-1VM\s0 be moved from the current entity hosting it to another.  It requests a live migration be done, if possible.
.Sh "For zVM:"
.IX Subsection "For zVM:"
\&\fBrmigrate\fR migrates a \s-1VM\s0 from one z/VM member to another in an \s-1SSI\s0 cluster (only in z/VM 6.2).
.SH "OPTIONS"
.IX Header "OPTIONS"
.Sh "zVM specific:"
.IX Subsection "zVM specific:"
.IP "\fBdestination=\fR The name of the destination z/VM system to which the specified virtual machine will be relocated." 4
.IX Item "destination= The name of the destination z/VM system to which the specified virtual machine will be relocated."
.PD 0
.IP "\fBaction=\fR It can be: (\s-1MOVE\s0) initiate a \s-1VMRELOCATE\s0 \s-1MOVE\s0 of the \s-1VM\s0, (\s-1TEST\s0) determine if \s-1VM\s0 is eligible to be relocated, or (\s-1CANCEL\s0) stop the relocation of \s-1VM\s0." 4
.IX Item "action= It can be: (MOVE) initiate a VMRELOCATE MOVE of the VM, (TEST) determine if VM is eligible to be relocated, or (CANCEL) stop the relocation of VM."
.IP "\fBforce=\fR It can be: (\s-1ARCHITECTURE\s0) attempt relocation even though hardware architecture facilities or \s-1CP\s0 features are not available on destination system, (\s-1DOMAIN\s0) attempt relocation even though \s-1VM\s0 would be moved outside of its domain, or (\s-1STORAGE\s0) relocation should proceed even if \s-1CP\s0 determines that there are insufficient storage resources on destination system." 4
.IX Item "force= It can be: (ARCHITECTURE) attempt relocation even though hardware architecture facilities or CP features are not available on destination system, (DOMAIN) attempt relocation even though VM would be moved outside of its domain, or (STORAGE) relocation should proceed even if CP determines that there are insufficient storage resources on destination system."
.IP "\fBimmediate=\fR It can be: (\s-1YES\s0) \s-1VMRELOCATE\s0 command will do one early pass through virtual machine storage and then go directly to the quiesce stage, or (\s-1NO\s0) specifies immediate processing." 4
.IX Item "immediate= It can be: (YES) VMRELOCATE command will do one early pass through virtual machine storage and then go directly to the quiesce stage, or (NO) specifies immediate processing."
.IP "\fBmax_total=\fR The maximum wait time for relocation to complete." 4
.IX Item "max_total= The maximum wait time for relocation to complete."
.IP "\fBmax_quiesce=\fR The maximum quiesce time a \s-1VM\s0 may be stopped during a relocation attempt." 4
.IX Item "max_quiesce= The maximum quiesce time a VM may be stopped during a relocation attempt."
.PD
.SH "\fBFiles\fP"
.IX Header "Files"
\&\fBvm\fR table \-
Table governing \s-1VM\s0 paramaters.  See \fIvm\fR\|(5) for further details.
This is used to determine the current host to migrate from.
.SH "\fBExamples\fP"
.IX Header "Examples"
\&\fBrmigrate\fR \fIv1\fR \fIn2\fR
.Sh "zVM specific:"
.IX Subsection "zVM specific:"
.RS 4
\&\fBrmigrate\fR \fIihost123\fR destination=\fIpokdev62\fR
.RE
