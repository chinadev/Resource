.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "LSSLP.1 1"
.TH LSSLP.1 1 "2013-04-10" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
\&\fBlsslp\fR \- Discovers selected networked services information within the same subnet.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fIlsslp [\-h| \-\-help]\fR
.PP
\&\fIlsslp [\-v| \-\-version]\fR
.PP
\&\fIlsslp [noderange] [\-V] [\-i ip[,ip..]][\-w][\-r|\-x|\-z][\-n][\-s CEC|FRAME|MM|IVM|RSA|HMC|CMM|IMM2|FSP][\-t tries][\-I][\-C counts][\-T timeout][\-\-vpdtable]\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The lsslp command discovers selected service types using the \-s flag. All service types are returned if the \-s flag is not specified. If a specific \s-1IP\s0 address is not specified using the \-i flag, the request is sent out all available network adapters. The optional \-r, \-x, \-z and \-\-vpdtable flags format the output. If you can't receive all the hardware, please use \-T to increase the waiting time. \fB\s-1NOTE\s0\fR lsslp on \s-1AIX\s0 has restriction. According to \s-1AIX\s0 design, you need to use these steps to discover nodes for each vlan: 1.Add multicast route, for example: route add 239.255.255.253 40.0.0.96. 2. Use lsslp \-i to do discovery, for example, lsslp \-i 40.0.0.96. 3. Delete the route: route delete 239.255.255.253 40.0.0.96. If you have several vlans and need to do discovery through several network interfaces, you need to repeat the steps above.
.PP
\&\s-1NOTE:\s0 \s-1SLP\s0 broadcast requests will propagate only within the subnet of the network adapter broadcast IPs specified by the \-i flag.
.SH "OPTIONS"
.IX Header "OPTIONS"
\&\fBnoderange\fR   The nodes which the user want to discover.
            If the user specify the noderange, lsslp will just return the nodes in 
            the node range. Which means it will help to add the new nodes to the xCAT
            database without modifying the existed definitions. But the nodes' name 
            specified in noderange should be defined in database in advance. The specified
            nodes' type can be frame/cec/hmc/fsp/bpa. If the it is frame or cec, lsslp
            will list the bpa or fsp nodes within the nodes(bap for frame, fsp for cec).
            Please do not use noderange with the flag \-s.
.PP
\&\fB\-i\fR          \s-1IP\s0(s) the command will send out (defaults to all available adapters).
.PP
\&\fB\-h\fR          Display usage message.
.PP
\&\fB\-n\fR          Only display and write the newly discovered hardwares.
.PP
\&\fB\-r\fR          Display Raw \s-1SLP\s0 response.
.PP
\&\fB\-C\fR          The number of the expected responses specified by the user. 
            When using this flag, lsslp will not return until the it has found all the nodes or time out.
            The default max time is 3 secondes. The user can use \-T flag the specify the time they want to use.
            A short time will limite the time costing, while a long time will help to find all the nodes.
.PP
\&\fB\-T\fR          The number in seconds to limite the time costing of lsslp.             
.PP
\&\fB\-s\fR          Service type interested in discovering.
.PP
\&\fB\-t\fR          Number or service-request attempts.
.PP
\&\fB\-\-vpdtable\fR  Output the \s-1SLP\s0 response in vpdtable formatting. Easy for writting data to vpd table.
.PP
\&\fB\-v\fR          Command Version.
.PP
\&\fB\-V\fR          Verbose output.
.PP
\&\fB\-w\fR          Writes output to xCAT database.
.PP
\&\fB\-x\fR          \s-1XML\s0 format.
.PP
\&\fB\-z\fR          Stanza formated output.
.PP
\&\fB\-I\fR          Give the warning message for the nodes in database which have no \s-1SLP\s0 responses.
            Please note that this flag noly can be used after the database migration finished successfully.
.SH "RETURN VALUE"
.IX Header "RETURN VALUE"
0 The command completed successfully.
.PP
1 An error has occurred.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
1. To list all discovered \s-1HMC\s0 service types in tabular format, enter:
.PP
.Vb 1
\& lsslp -s HMC
.Ve
.PP
Output is similar to:
.PP
.Vb 4
\& device type-model serial-number ip-addresses   hostname
\& HMC    7310CR2    103F55A        1.1.1.115      hmc01
\& HMC    7310CR2    105369A        3.3.3.103      hmc02
\& HMC    7310CR3    KPHHK24        3.3.3.154      hmc03
.Ve
.PP
2. list all discovered \s-1FSP\s0 service types in raw response format on subnet 30.0.0.255, enter:
.PP
.Vb 1
\& lsslp -i 3.0.0.255 -s CEC -r
.Ve
.PP
Output is similar to:
.PP
.Vb 2
\& (type=cec-service-processor),(serial-number=10A3AEB),(machinetype-model=9117-570),(fru-serial-number=YL11C5338102),(hostname=),(frame-number=0),(cage-number=0),(ip-address=3.0.0.94,1.1.1.147),(web-url=https://3.0.0.94:473 ), (slot=1),(bpc-machinetype-model=0),(bpc-serial-number=0),(Image=fips240/b0630a_0623.240)
\& (type=cec-service-processor),(serial-number=10A3E2B),(machinetype-model=9117-570),(fru-serial- number=YL11C5338250),(hostname=),(frame-number=0),(cage-number=0),(ip-address=3.0.0.95,1.1.1.147), (web-url=https://3.0.0.95:473 ),(slot=1),(bpc-machinetype-model=0),(bpc-serial-number=0),(Image=fips240/b0630a_0623.240)
.Ve
.PP
3. To list all discovered \s-1MM\s0 service types in \s-1XML\s0 format and write the output to the xCAT database, enter:
.PP
.Vb 1
\& lsslp -s MM -x -w
.Ve
.PP
Output is similar to:
.PP
.Vb 10
\&  <Node>
\&    <groups>mm,all</groups>
\&    <id>00:14:5E:E0:CB:1E</id>
\&    <mgt>blade</mgt>
\&    <mtm>029310C</mtm>
\&    <node>Server-029310C-SN100485A-A</node>
\&    <nodetype>mm</nodetype>
\&    <otherinterfaces>9.114.47.229</otherinterfaces>
\&    <serial>100485A</serial>
\&  </Node>
.Ve
.PP
4. To list all discovered service types in stanza format and write the output to the xCAT database, enter:
.PP
.Vb 1
\& lsslp -z -w
.Ve
.PP
Output is similar to:
.PP
c76v1hmc02:
        objtype=node
        hcp=c76v1hmc02
        nodetype=hmc
        mtm=7315CR2
        serial=10407DA
        ip=192.168.200.125
        groups=hmc,all
        mgt=hmc
        mac=00:1a:64:fb:7d:50        
        hidden=0
192.168.200.244:
        objtype=node
        hcp=192.168.200.244
        nodetype=fsp
        mtm=9125\-F2A
        serial=0262662
        side=A\-0
        otherinterfaces=192.168.200.244
        groups=fsp,all
        mgt=fsp
        id=4
        parent=Server\-9125\-F2A\-SN0262662
        mac=00:1a:64:fa:01:fe
        hidden=1
Server\-8205\-E6B\-SN1074CDP:
        objtype=node
        hcp=Server\-8205\-E6B\-SN1074CDP
        nodetype=cec
        mtm=8205\-E6B
        serial=1074CDP
        groups=cec,all
        mgt=fsp
        id=0
        hidden=0
192.168.200.33:
        objtype=node
        hcp=192.168.200.33
        nodetype=bpa
        mtm=9458\-100
        serial=99201WM
        side=B\-0
        otherinterfaces=192.168.200.33
        groups=bpa,all
        mgt=bpa
        id=0
        mac=00:09:6b:ad:19:90
        hidden=1
Server\-9125\-F2A\-SN0262652:
        objtype=node
        hcp=Server\-9125\-F2A\-SN0262652
        nodetype=frame
        mtm=9125\-F2A
        serial=0262652
        groups=frame,all
        mgt=fsp
        id=5
        hidden=0
.PP
5. To list all discovered service types in stanza format and display the \s-1IP\s0 address, enter:
.PP
.Vb 1
\& lsslp -w
.Ve
.PP
Output is similar to:
.PP
.Vb 11
\& mm01:
\&    objtype=node
\&    nodetype=fsp
\&    mtm=8233-E8B
\&    serial=1000ECP
\&    side=A-0
\&    groups=fsp,all
\&    mgt=fsp
\&    id=0
\&    mac=00:14:5E:F0:5C:FD
\&    otherinterfaces=50.0.0.5
.Ve
.PP
.Vb 11
\& bpa01:
\&    objtype=node
\&    nodetype=bpa
\&    mtm=9A01-100
\&    serial=0P1N746
\&    side=A-1
\&    groups=bpa,all
\&    mgt=bpa
\&    id=0
\&    mac=00:1A:64:54:8C:A5
\&    otherinterfaces=50.0.0.1
.Ve
.PP
6. To list all the CECs, enter:
.PP
.Vb 1
\& lsslp -s CEC
.Ve
.PP
device  type-model  serial-number  side  ip-addresses  hostname
\&\s-1FSP\s0     9117\-MMB    105EBEP        A\-1   20.0.0.138    20.0.0.138
\&\s-1FSP\s0     9117\-MMB    105EBEP        B\-1   20.0.0.139    20.0.0.139
\&\s-1CEC\s0     9117\-MMB    105EBEP                            Server\-9117\-MMB\-SN105EBEP
.PP
7. To list all the nodes defined in database which have no \s-1SLP\s0 response.
.PP
.Vb 1
\&  lsslp -I
.Ve
.PP
Output is similar to:
.PP
These nodes defined in database but can't be discovered: f17c00bpcb_b,f17c01bpcb_a,f17c01bpcb_b,f17c02bpcb_a,
.PP
device  type-model  serial-number  side  ip-addresses  hostname
bpa     9458\-100    \s-1BPCF017\s0        A\-0   40.17.0.1     f17c00bpca_a
bpa     9458\-100    \s-1BPCF017\s0        B\-0   40.17.0.2     f17c00bpcb_a
.PP
8. To find the nodes within the user specified. Please make sure the noderange input have been defined in xCAT database.
.PP
.Vb 2
\&   lsslp CEC1-CEC3
\&or lsslp CEC1,CEC2,CEC3
.Ve
.PP
.Vb 16
\&  device  type-model  serial-number  side  ip-addresses     hostname
\&  FSP     9A01-100    0P1P336        A-0   192.168.200.34  192.168.200.34
\&  FSP     9A01-100    0P1P336        B-0   192.168.200.35  192.168.200.35
\&  FSP     9A01-100    0P1P336        A-1   50.0.0.27       50.0.0.27
\&  FSP     9A01-100    0P1P336        B-1   50.0.0.28       50.0.0.28
\&  CEC     9A01-100    0P1P336                              CEC1
\&  FSP     8233-E8B    1040C7P        A-0   192.168.200.36  192.168.200.36
\&  FSP     8233-E8B    1040C7P        B-0   192.168.200.37  192.168.200.37
\&  FSP     8233-E8B    1040C7P        A-1   50.0.0.29       50.0.0.29
\&  FSP     8233-E8B    1040C7P        B-1   50.0.0.30       50.0.0.30
\&  CEC     8233-E8B    1040C7P                              CEC2
\&  FSP     8205-E6B    1000ECP        A-0   192.168.200.38  192.168.200.38
\&  FSP     8205-E6B    1000ECP        B-0   192.168.200.39  192.168.200.39
\&  FSP     8205-E6B    1000ECP        A-1   50.0.0.31       50.0.0.27
\&  FSP     8205-E6B    1000ECP        B-1   50.0.0.32       50.0.0.28
\&  CEC     8205-E6B    1000ECP                              CEC3
.Ve
.PP
9. To list all discovered \s-1CMM\s0 in stanza format, enter:
   lsslp \-s \s-1CMM\s0 \-m \-z 
.PP
e114ngmm1:
        objtype=node
        mpa=e114ngmm1
        nodetype=cmm
        mtm=98939AX
        serial=102537A
        groups=cmm,all
        mgt=blade
        hidden=0
        otherinterfaces=70.0.0.30
        hwtype=cmm
.SH "FILES"
.IX Header "FILES"
/opt/xcat/bin/lsslp
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIrscan\fR\|(1)
