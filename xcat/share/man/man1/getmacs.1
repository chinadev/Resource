.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "GETMACS.1 1"
.TH GETMACS.1 1 "2013-02-06" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
\&\fBgetmacs\fR \- Collects node MAC address.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Sh "Common:"
.IX Subsection "Common:"
\&\fBgetmacs\fR [\fB\-h\fR| \fB\-\-help\fR | \fB\-v\fR| \fB\-\-version\fR]
.Sh "\s-1PPC\s0 specific:"
.IX Subsection "PPC specific:"
\&\fBgetmacs\fR \fInoderange\fR [\fB\-F\fR \fIfilter\fR]
.PP
\&\fBgetmacs\fR \fInoderange\fR [\fB\-M\fR]
.PP
\&\fBgetmacs\fR \fInoderange\fR [\fB\-V\fR| \fB\-\-verbose\fR] [\fB\-f\fR] [\fB\-d\fR] [\fB\-\-arp\fR] | [\fB\-D\fR [\fB\-S\fR \fIserver\fR] [\fB\-G\fR \fIgateway\fR] [\fB\-C\fR \fIclient\fR] [\fB\-o\fR]]
.Sh "blade specific:"
.IX Subsection "blade specific:"
\&\fBgetmacs\fR \fInoderange\fR [\fB\-V\fR| \fB\-\-verbose\fR] [\fB\-d\fR] [\fB\-\-arp\fR] [\fB\-i\fR \fIethN\fR|\fIenN\fR]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The getmacs command collects \s-1MAC\s0 address from a single or range of nodes.
Note that on \s-1AIX\s0 systems, the returned \s-1MAC\s0 address is not colon-seperated (for example 8ee2245cf004), while on Linux systems the \s-1MAC\s0 address is colon-seperated (for example 8e:e2:24:5c:f0:04).
If no ping test performed,  getmacs writes the first adapter \s-1MAC\s0 to the xCAT database.  If ping test performed, getmacs will write the first successfully pinged \s-1MAC\s0 to xCAT database.
.PP
For \s-1PPC\s0 (without \s-1HMC\s0, using Direct \s-1FSP\s0 Management) specific:
.PP
Note: If network adapters are physically assigned to LPARs, getmacs cannot read the \s-1MAC\s0 addresses unless perform ping test, since there is no \s-1HMC\s0 command to read them and getmacs has to login to open formware. And if the LPARs has never been activated before, getmacs need to be performed with the option "\fB\-D\fR" to get theirs \s-1MAC\s0 addresses.
.PP
For \s-1IBM\s0 Flex Compute Node (Compute Node for short) specific:
.PP
Note: If "\fB\-d\fR" is specified, all the \s-1MAC\s0 of the blades will be displayed. If no option specified, the first \s-1MAC\s0 address of the blade will be written to mac table.
.SH "OPTIONS"
.IX Header "OPTIONS"
\&\fB\-\-arp\fR          
.PP
Read \s-1MAC\s0 address with \s-1ARP\s0 protocal.
.PP
\&\fB\-C\fR          
.PP
Specify the \s-1IP\s0 address of the partition for ping test. The default is to read from xCAT database if no \fB\-C\fR specified. 
.PP
\&\fB\-d\fR          
.PP
Display \s-1MAC\s0 only. The default is to write the first valid adapter \s-1MAC\s0 to the xCAT database.
.PP
\&\fB\-D\fR          
.PP
Perform ping test.  Please be aware that in this way, the lpars will be reset.
.PP
\&\fB\-f\fR          
.PP
Force immediate shutdown of the partition.This flag must be used with \-D flag.
.PP
\&\fB\-F\fR          
.PP
Specify filters to select the correct adapter.  Acceptable filters are Type, MAC_Address, Phys_Port_Loc, Adapter, Port_Group, Phys_Port, Logical_Port, VLan, VSwitch, Curr_Conn_Speed.
.PP
\&\fB\-G\fR          
.PP
Gateway \s-1IP\s0 address of the partition.  The default is to read from xCAT database if no \fB\-G\fR specified.
.PP
\&\fB\-h\fR          
.PP
Display usage message.
.PP
\&\fB\-M\fR
.PP
Return multiple \s-1MAC\s0 addresses for the same adapter or port, if available from the hardware.  For some network adapters (e.g. \s-1HFI\s0) the \s-1MAC\s0 can change when there are some recoverable internal errors.  In this case, the hardware can return several MACs that the adapter can potentially have, so that xCAT can put all of them in \s-1DHCP\s0.  This allows successful booting, even after a \s-1MAC\s0 change, but on Linux at this time, it can also cause duplicate \s-1IP\s0 addresses, so it is currently not recommended on Linux.  By default (without this flag), only a single \s-1MAC\s0 address is returned for each adapter.
.PP
\&\fB\-o\fR          
.PP
Read \s-1MAC\s0 address when the lpar is in openfirmware state.  This option mush be used with [\fB\-D\fR] option to perform ping test. Before use \fB\-o\fR, the lpar must be in openfirmware state.
.PP
\&\fB\-S\fR          
.PP
The \s-1IP\s0 address of the machine to ping.  The default is to read from xCAT databse if no \fB\-S\fR specified.
.PP
\&\fB\-v\fR          
.PP
Command Version.
.PP
\&\fB\-V\fR         
.PP
Verbose output.
.PP
\&\fB\-i\fR
.PP
Specify the interface whose mac address will be collected and written into mac table. If 4 mac addresses are returned by option '\-d', they all are the mac addresses of the blade. The N can start from 0(map to the eth0 of the blade) to 3. If 5 mac addresses are returned, the 1st mac address must be the mac address of the blade's \s-1FSP\s0, so the N will start from 1(map to the eth0 of the blade) to 4. 
.SH "RETURN VALUE"
.IX Header "RETURN VALUE"
.Vb 1
\&  0 The command completed successfully.
.Ve
.PP
.Vb 1
\&  1 An error has occurred.
.Ve
.SH "EXAMPLES"
.IX Header "EXAMPLES"
1. To retrieve the \s-1MAC\s0 address for the HMC-managed partition lpar4 and write the first valid adapter \s-1MAC\s0 to the xCAT database, enter:
.PP
.Vb 1
\& getmacs lpar4
.Ve
.PP
Output is similar to:
.PP
.Vb 4
\& lpar4:
\& #Type  MAC_Address  Phys_Port_Loc  Adapter  Port_Group  Phys_Port  Logical_Port  VLan  VSwitch  Curr_Conn_Speed
\& hea  7607DFB07F02  N/A  N/A  N/A  N/A  N/A  1  ETHERNET0  N/A
\& ent U78A1.001.99203B5-P1-T6   00145eb55788 /lhea@23c00614/ethernet@23e00514 unsuccessful physical
.Ve
.PP
2. To retrieve the \s-1MAC\s0 address with \s-1ARP\s0 protocal:
.PP
.Vb 1
\& getmacs lpar4 --arp
.Ve
.PP
Output is similar to:
.PP
.Vb 3
\& lpar4:
\& #IP           MAC_Address
\& 192.168.0.10  00145eb55788
.Ve
.PP
3. To retrieve the \s-1MAC\s0 address for the HMC-managed partition lpar4 and display the result only, enter:
.PP
.Vb 1
\& getmacs lpar4 -d
.Ve
.PP
Output is similar to:
.PP
.Vb 4
\& lpar4:
\& #Type  MAC_Address  Phys_Port_Loc  Adapter  Port_Group  Phys_Port  Logical_Port  VLan  VSwitch  Curr_Conn_Speed
\& hea  7607DFB07F02  N/A  N/A  N/A  N/A  N/A  1  ETHERNET0  N/A
\& ent U78A1.001.99203B5-P1-T6   00145eb55788 /lhea@23c00614/ethernet@23e00514 unsuccessful physical
.Ve
.PP
4. To retrieve the \s-1MAC\s0 address for the HMC-managed partition lpar4 with filter Type=hea,VSwitch=ETHERNET0.
.PP
.Vb 1
\& getmacs lpar4 -F Type=hea,VSwitch=ETHERNET0
.Ve
.PP
Output is similar to:
.PP
.Vb 3
\& lpar4:
\& #Type  MAC_Address  Phys_Port_Loc  Adapter  Port_Group  Phys_Port  Logical_Port  VLan  VSwitch  Curr_Conn_Speed
\& hea  7607DFB07F02  N/A  N/A  N/A  N/A  N/A  1  ETHERNET0  N/A
.Ve
.PP
5. To retrieve the \s-1MAC\s0 address while performing a ping test for the HMC-managed partition lpar4 and display the result only, enter:
.PP
.Vb 1
\& getmacs lpar4 -d -D -S 9.3.6.49 -G 9.3.6.1 -C 9.3.6.234
.Ve
.PP
Output is similar to:
.PP
.Vb 3
\& lpar4:
\& #Type  Location Code   MAC Address      Full Path Name  Ping Result
\& ent U9133.55A.10B7D1G-V12-C4-T1 8e:e2:24:5c:f0:04 /vdevice/l-lan@30000004 successful virtual
.Ve
.PP
6. To retrieve the \s-1MAC\s0 address for Power 775 \s-1LPAR\s0 using Direct \s-1FSP\s0 Management without ping test and display the result only, enter:
.PP
.Vb 1
\& getmacs lpar4 -d
.Ve
.PP
Output is similar to:
.PP
.Vb 3
\& lpar4:
\& #Type  Phys_Port_Loc  MAC_Address  Adapter  Port_Group  Phys_Port  Logical_Port  VLan  VSwitch  Curr_Conn_Speed
\& HFI  N/A  02:00:02:00:00:04  N/A  N/A  N/A  N/A  N/A  N/A  N/A
.Ve
.PP
7. To retrieve multiple \s-1MAC\s0 addresses from Power 775 \s-1HFI\s0 network adapter using Direct \s-1FSP\s0 Management, enter:
.PP
.Vb 1
\& getmacs lpar4 -M
.Ve
.PP
Output is similar to:
.PP
.Vb 3
\& lpar4:
\& #Type  Phys_Port_Loc  MAC_Address  Adapter  Port_Group  Phys_Port  Logical_Port  VLan  VSwitch  Curr_Conn_Speed
\& HFI  N/A  02:00:02:00:00:04|02:00:02:00:00:05|02:00:02:00:00:06  N/A  N/A  N/A  N/A  N/A  N/A  N/A
.Ve
.SH "FILES"
.IX Header "FILES"
/opt/xcat/bin/getmacs
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fImakedhcp\fR\|(8)
