.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "IMGCAPTURE.1 1"
.TH IMGCAPTURE.1 1 "2013-03-11" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
\&\fBimgcapture\fR \- Captures an image from a Linux diskful node and create a diskless or diskful image on the management node.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBimgcapture\fR node \fB\-t\fR|\fB\-\-type\fR diskless [\fB\-p\fR|\fB\-\-profile\fR \fIprofile\fR] [\fB\-o\fR|\fB\-\-osimage\fR \fIosimage\fR] [\fB\-i\fR \fInodebootif\fR] [\fB\-n\fR \fInodenetdrivers\fR] [\fB\-V\fR|\fB\-\-verbose\fR]
.PP
\&\fBimgcapture\fR node \fB\-t\fR|\fB\-\-type\fR sysclone \fB\-o\fR|\fB\-\-osimage\fR \fIosimage\fR [\fB\-V\fR|\fB\-\-verbose\fR]
.PP
\&\fBimgcapture\fR [\fB\-h\fR | \fB\-\-help\fR] | [\fB\-v\fR | \fB\-\-version\fR]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \fBimgcapture\fR command will capture an image from one running diskful Linux node and create a diskless or diskful image for later use.
.PP
The \fBnode\fR should be one diskful Linux node, managed by the xCAT \s-1MN\s0, and the remote shell between \s-1MN\s0 and the \fBnode\fR should have been configured. \s-1AIX\s0 is not supported. 
.PP
The \fBimgcapture\fR command supports two image types: \fBdiskless\fR and \fBsysclone\fR. For the \fBdiskless\fR type, it will capture an image from one running diskful Linux node, prepares the rootimg directory, kernel and initial rmadisks for the \fBliteimg\fR/\fBpackimage\fR command to generate the statelite/stateless rootimg. For the \fBsysclone\fR type, it will capture an image from one running diskful Linux node, create an osimage which can be used to clone other diskful Linux nodes.
.PP
The \fBdiskless\fR type:
.PP
The \fIosimage\fR is pre\-defined, the attributes of osimage will be used to capture and prepare the root image. The \fBosver\fR, \fBarch\fR and \fBprofile\fR attributes for the stateless/statelite image to be created are duplicated from the \fBnode\fR's attribute. If the \fB\-p|\-\-profile\fR \fIprofile\fR option is specified, the image will be created under "/<\fIinstallroot\fR>/netboot/<osver>/<arch>/<\fIprofile\fR>/rootimg". 
.PP
The default files/directories excluded in the image are specified by /opt/xcat/share/xcat/netboot/<os>/<\fIprofile\fR>.<osver>.<arch>.imgcapture.exlist; also, you can put your customized file (<\fIprofile\fR>.<osver>.<arch>.imgcapture.exlist) to /install/custom/netboot/<osplatform>. The directories in the default \fI.imgcapture.exlist\fR file are necessary to capture image from the diskful Linux node managed by xCAT, please don't remove it.
.PP
The image captured will be extracted into the /<\fIinstallroot\fR>/netboot/<\fBosver\fR>/<\fBarch\fR>/<\fBprofile\fR>/rootimg directory. 
.PP
After the \fBimgcapture\fR command returns without any errors, you can customize the rootimg and run the \fBliteimg\fR/\fBpackimage\fR command with the options you want.
.PP
The \fBsysclone\fR type:
.PP
xCAT leverages the Open Source Tool \- Systemimager to capture the osimage from the \fBnode\fR, and put it into /<\fIinstallroot\fR>/\fBsysclone\fR/\fBimages\fR directory.
.PP
The \fBimgcapture\fR command will create the \fIosimage\fR definition after the image is captured successfully, you can use this osimage and \fBnodeset\fR command to clone diskful nodes.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-t\fR|\fB\-\-type\fR" 4
.IX Item "-t|--type"
Specify the osimage type you want to capture, two types are supported: diskless and sysclone.
.IP "\fB\-p|\-\-profile\fR \fIprofile\fR" 4
.IX Item "-p|--profile profile"
Assign \fIprofile\fR as the profile of the image to be created.
.IP "\fB\-o|\-\-osimage\fR \fIosimage\fR" 4
.IX Item "-o|--osimage osimage"
The osimage name.
.IP "\fB\-i\fR \fInodebootif\fR" 4
.IX Item "-i nodebootif"
The network interface the diskless node will boot over (e.g. eth0), which is used by the \fBgenimage\fR command to generate initial ramdisks.
.Sp
This is optional.
.IP "\fB\-n\fR \fInodenetdrivers\fR" 4
.IX Item "-n nodenetdrivers"
The driver modules needed for the network interface, which is used by the \fBgenimage\fR command to generate initial ramdisks.
.Sp
This is optional. By default, the \fBgenimage\fR command can provide drivers for the following network interfaces:
.Sp
For x86 or x86_64 platform:
.Sp
.Vb 1
\&    tg3 bnx2 bnx2x e1000 e1000e igb m1x_en
.Ve
.Sp
For ppc64 platform:
.Sp
.Vb 1
\&    e1000 e1000e igb ibmveth ehea
.Ve
.Sp
For S390x:
.Sp
.Vb 1
\&    qdio ccwgroup
.Ve
.Sp
If the network interface is not in the above list, you'd better specify the driver modules with this option.
.IP "\fB\-h|\-\-help\fR" 4
.IX Item "-h|--help"
Display the usage message.
.IP "\fB\-v|\-\-version\fR" 4
.IX Item "-v|--version"
Display the version.
.IP "\fB\-V|\-\-verbose\fR" 4
.IX Item "-V|--verbose"
Verbose output.
.SH "RETRUN VALUE"
.IX Header "RETRUN VALUE"
0 The command completed sucessfully.
.PP
1 An error has occurred.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
\&\fBnode1\fR is one diskful Linux node, which is managed by xCAT.
.PP
1. In order to capture and prepare the diskless root image, run the following command:
.PP
imgcapture node1 \-t diskless
.PP
2. In order to capture and prepare the diskless root image with \fBhpc\fR as profile, run the command:
.PP
imgcapture node1 \-t diskless \-p hpc
.PP
3. In order to capture and prepare the diskless root image: its profile is \fBhpc\fR, and the network interface the diskless node will boot over is \fBeth0\fR, the driver modules for this network interface is \fBe1000e\fR.
.PP
imgcapture node1 \-t diskless \-p hpc \-i eth0 \-n e1000e
.PP
4. There's one pre-defined \fIosimage\fR. In order to capture and prepare the diskless root image for \fIosimage\fR, run the command:
.PP
imgcapture node1 \-t diskless \-o osimage
.PP
5. In order to capture the diskful image from \fBnode1\fR and create the \fIosimage\fR \fBimg1\fR, run the command:
.PP
imgcapture node1 \-t sysclone \-o img1
.SH "FILES"
.IX Header "FILES"
/opt/xcat/bin/imgcapture
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIgenimage\fR\|(1), \fIimgimport\fR\|(1), \fIimgexport\fR\|(1), \fIpackimage\fR\|(1), \fIliteimg\fR\|(1), \fInodeset\fR\|(8)
