.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "LSTREE.1 1"
.TH LSTREE.1 1 "2013-02-06" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
\&\fBlstree\fR \- Display the tree of service node hierarchy, hardware hierarchy, or VM hierarchy.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBlstree\fR [\-h | \-\-help]
.PP
\&\fBlstree\fR [\-s | \-\-servicenode] [\-H | \-\-hardwaremgmt] [\-v | \-\-virtualmachine] [noderange]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \fBlstree\fR command can display the tree of service node hierarchy for the xCAT nodes which have service node defined or which are service nodes, display the tree of hardware hierarchy only for the physical objects, display the tree of \s-1VM\s0 hierarchy for the xCAT nodes which are virtual machines or which are the hosts of virtual machines. If a noderange is specified, only show the part of the hierarchy that involves those nodes. For \s-1ZVM\s0, we only support to disply \s-1VM\s0 hierarchy. By default, lstree will show both the hardware hierarchy and the \s-1VM\s0 hierarchy for all the nodes.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-h|\-\-help\fR" 10
.IX Item "-h|--help"
Display usage message.
.IP "\fB\-s|\-\- servicenode\fR" 10
.IX Item "-s|-- servicenode"
Show the tree of service node hierarchy.
.IP "\fB\-H|\-\-hardwaremgmt\fR" 10
.IX Item "-H|--hardwaremgmt"
Show the tree of hardware hierarchy.
.IP "\fB\-\-v|\-\-virtualmachine\fR" 10
.IX Item "--v|--virtualmachine"
Show the tree of \s-1VM\s0 hierarchy.
.IP "\fBnoderange\fR" 10
.IX Item "noderange"
A set of comma delimited node names and/or group names. See the \*(L"noderange\*(R" man page for details on additional supported formats.
.SH "RETURN VALUE"
.IX Header "RETURN VALUE"
0  The command completed successfully.
.PP
1  An error has occurred.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.IP "1." 3
To display the tree of service node hierarchy for all the nodes.
.Sp
\&\fBlstree \-s\fR
.Sp
Output is similar to:
.Sp
Service Node: mysn01
 |_\|_mycn01
 |_\|_mycn02
 |_\|_mycn03
.Sp
Service Node: mysn02
 |_\|_mycn11
 |_\|_mycn12
 |_\|_mycn13
 ......
.IP "2." 3
To display the tree of service node hierarchy for service node \*(L"mysn01\*(R".
.Sp
\&\fBlstree \-s mysn01\fR
.Sp
Output is similar to:
.Sp
Service Node: mysn01
 |_\|_mycn01
 |_\|_mycn02
 |_\|_mycn03
.IP "3." 3
To display the tree of hardware hierarchy for all the nodes.
.Sp
\&\fBlstree \-H\fR
.Sp
Output is similar to:
.Sp
\&\s-1HMC:\s0 myhmc01
 |_\|_Frame: myframe01
    |_\|_CEC: mycec01
    |_\|_CEC: mycec02
    ......
.Sp
Service Focal Point: myhmc02
 |_\|_Frame: myframe01
    |_\|_CEC: mycec01
    |_\|_CEC: mycec02
    |_\|_CEC: mycec03
    ......
.Sp
Management Module: mymm01
 |_\|_Blade 1: js22n01
 |_\|_Blade 2: js22n02
 |_\|_Blade 3: js22n03
 ......
.Sp
\&\s-1BMC:\s0 192.168.0.1
 |_\|_Server: x3650n01
.IP "4." 3
To display the tree of hardware hierarchy for \s-1HMC\s0 \*(L"myhmc01\*(R".
.Sp
\&\fBlstree \-H myhmc01\fR
.Sp
Output is similar to:
.Sp
\&\s-1HMC:\s0 myhmc01
 |_\|_Frame: myframe01
    |_\|_CEC: mycec01
    |_\|_CEC: mycec02
    ......
.IP "5." 3
To display the tree of \s-1VM\s0 hierarchy for all the nodes.
.Sp
\&\fBlstree \-v\fR
.Sp
Output is similar to:
.Sp
Server: hs22n01
 |_\|_ hs22vm1
.Sp
Server: x3650n01
 |_\|_ x3650n01kvm1
 |_\|_ x3650n01kvm2
.IP "6." 3
To display the tree of \s-1VM\s0 hierarchy for the node \*(L"x3650n01\*(R".
.Sp
\&\fBlstree \-v x3650n01\fR
.Sp
Output is similar to:
.Sp
Server: x3650n01
 |_\|_ x3650n01kvm1
 |_\|_ x3650n01kvm2
.IP "7." 3
To display both the hardware tree and \s-1VM\s0 tree for all nodes.
.Sp
\&\fBlstree\fR
.Sp
Output is similar to:
.Sp
\&\s-1HMC:\s0 myhmc01
 |_\|_Frame: myframe01
    |_\|_CEC: mycec01
       |_\|_LPAR 1: node01
       |_\|_LPAR 2: node02
       |_\|_LPAR 3: node03
       ......
    |_\|_CEC: mycec02
       |_\|_LPAR 1: node11
       |_\|_LPAR 2: node12
       |_\|_LPAR 3: node13
       ......
.Sp
Service Focal Point: myhmc02
 |_\|_Frame: myframe01
    |_\|_CEC: mycec01
       |_\|_LPAR 1: node01
       |_\|_LPAR 2: node02
       |_\|_LPAR 3: node03
       ......
 |_\|_Frame: myframe02
    |_\|_CEC: mycec02
       |_\|_LPAR 1: node21
       |_\|_LPAR 2: node22
       |_\|_LPAR 3: node23
       ......
.Sp
Management Module: mymm01
 |_\|_Blade 1: hs22n01
    |_\|_hs22n01vm1
    |_\|_hs22n01vm2
 |_\|_Blade 2: hs22n02
    |_\|_hs22n02vm1
    |_\|_hs22n02vm2
 ......
.Sp
\&\s-1BMC:\s0 192.168.0.1
 |_\|_Server: x3650n01
    |_\|_ x3650n01kvm1
    |_\|_ x3650n01kvm2
.SH "FILES"
.IX Header "FILES"
/opt/xcat/bin/lstree
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fInoderange\fR\|(3), \fItabdump\fR\|(8)
