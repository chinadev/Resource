.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "MONADD.1 1"
.TH MONADD.1 1 "2013-02-06" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
\&\fBmonadd\fR \- Registers a monitoring plug\-in to the xCAT cluster.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fImonadd  [\-h| \-\-help]\fR
.PP
\&\fImonadd  [\-v| \-\-version]\fR
.PP
\&\fImonadd  name [\-n|\-\-nodestatmon] [\-s|\-\-settings settings]\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This command is used to register a monitoring plug-in module to monitor the xCAT cluster. The plug-in module will be added to the xCAT \fImonitoring\fR database table and the configuration scripts for the monitoring plug\-in, if any, will be added to the \fIpostscripts\fR table. A monitoring plug-in module acts as a bridge that connects a 3rd party monitoring software and the xCAT cluster. A configuration script is used to configure the 3rd party software. Once added to the <postscripts> table, it will be invoked on the nodes during node deployment stage.
.SH "Parameters"
.IX Header "Parameters"
\&\fIname\fR is the name of the monitoring plug-in module. For example, if the the \fIname\fR is called \fIxxx\fR, then the actual file name that the xcatd looks for is \fI/opt/xcat/lib/perl/xCAT_monitoring/xxx.pm\fR. Use \fImonls \-a\fR command to list all the monitoring plug-in modules that can be used.
.PP
\&\fIsettings\fR is the monitoring plug-in specific settings. It is used to customize the behavior of the plug-in or configure the 3rd party software. Format: \fI\-s key-value \-s key=value ...\fR Please note that the square brackets are needed here. Use \fImonls name \-d\fR command to look for the possbile setting keys for a plug-in module.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-h | \-\-help\fR" 10
.IX Item "-h | --help"
Display usage message.
.IP "\fB\-n | \-\-nodestatmon\fR" 10
.IX Item "-n | --nodestatmon"
Indicate that this monitoring plug-in will be used for feeding the node liveness status to the xCAT \fInodelist\fR table.
.IP "\fB\-s | \-\-settings\fR" 10
.IX Item "-s | --settings"
Specifies the plug-in specific settings. These settings will be used by the plug-in to customize certain entities for the plug-in or the third party monitoring software. e.g. \-s mon_interval=10 \-s toggle=1.
.IP "\fB\-v | \-\-version \fR" 10
.IX Item "-v | --version "
Command Version.
.SH "RETURN VALUE"
.IX Header "RETURN VALUE"
0 The command completed successfully.
.PP
1 An error has occurred.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.IP "1." 3
To register gangliamon plug-in module (which interacts with Ganglia monitoring software) to monitor the xCAT cluster, enter:
.Sp
.Vb 1
\&  monadd gangliamon
.Ve
.IP "2." 3
To register rmcmon plug-in module (which interacts with \s-1IBM\s0's \s-1RSCT\s0 monitoring software) to monitor the xCAT cluster and have it feed the node liveness status to xCAT's \fInodelist\fR table, enter:
.Sp
.Vb 1
\&  monadd rmcmon -n
.Ve
.Sp
This will also add the \fIconfigrmcnode\fR to the \fIpostscripts\fR table. To view the content of the \fIpostscripts\fR table, enter:
.Sp
.Vb 4
\&  tabdump postscritps
\&  #node,postscripts,comments,disable
\&  "service","servicenode",,
\&  "xcatdefaults","syslog,remoteshell,configrmcnode",,
.Ve
.IP "3." 3
To register xcatmon plug-in module to feed the node liveness status to xCAT's \fInodelist\fR table, enter:
.Sp
.Vb 1
\&  monadd xcatmon -n -s ping-interval=2
.Ve
.Sp
where 2 is the number of minutes between the pings.
.SH "FILES"
.IX Header "FILES"
/opt/xcat/bin/monadd
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fImonls\fR\|(1), \fImonrm\fR\|(1), \fImonstart\fR\|(1), \fImonstop\fR\|(1), \fImoncfg\fR\|(1), \fImondecfg\fR\|(1)
