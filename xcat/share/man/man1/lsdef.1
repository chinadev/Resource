.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "LSDEF.1 1"
.TH LSDEF.1 1 "2013-03-14" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
\&\fBlsdef\fR \- Use this command to list xCAT data object definitions.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBlsdef\fR [\fB\-h\fR|\fB\-\-help\fR] [\fB\-t\fR \fIobject-types\fR] [\fB\-i\fR \fIattr-list\fR]
.PP
\&\fBlsdef\fR [\fB\-V\fR|\fB\-\-verbose\fR] [\fB\-l\fR|\fB\-\-long\fR] [\fB\-s\fR|\fB\-\-short\fR] [\fB\-a\fR|\fB\-\-all\fR] [\fB\-S\fR] 
[\fB\-t\fR \fIobject-types\fR] [\fB\-o\fR \fIobject-names\fR] [\fB\-z\fR|\fB\-\-stanza\fR] [\fB\-i\fR \fIattr-list\fR]
[\fB\-c\fR|\fB\-\-compress\fR] [\fB\-\-osimage\fR] [\fB\-\-nics\fR] [[\fB\-w\fR \fIattr\fR==\fIval\fR]
[\fB\-w\fR \fIattr\fR=~\fIval\fR] ...] [\fInoderange\fR]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This command is used to display xCAT object definitions which are stored
in the xCAT database.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-a|\-\-all\fR" 10
.IX Item "-a|--all"
Display all definitions.
For performance consideration, the auditlog and eventlog objects will not be listed.
To list auditlog or eventlog objects, use lsdef \-t auditlog or lsdef \-t eventlog instead.
.IP "\fB\-c|\-\-compress\fR" 10
.IX Item "-c|--compress"
Display information in compressed mode, each output line has format \*(L"<object name>: <data>\*(R".
The output can be passed to command xcoll or xdshbak for formatted output. 
The \-c flag must be used with \-i flag.
.IP "\fB\-h|\-\-help\fR" 10
.IX Item "-h|--help"
Display usage message.
.IP "\fB\-i\fR \fIattr-list\fR" 10
.IX Item "-i attr-list"
Comma separated list of attribute names to display.
.IP "\fB\-l|\-\-long\fR" 10
.IX Item "-l|--long"
List the complete object definition.
.IP "\fB\-s|\-\-short\fR" 10
.IX Item "-s|--short"
Only list the object names.
.IP "\fB\-S\fR" 10
.IX Item "-S"
List all the hidden nodes (\s-1FSP/BPA\s0 nodes) with other ones.
.IP "\fInoderange\fR" 10
.IX Item "noderange"
A set of comma delimited node names and/or group names.
See the \*(L"noderange\*(R" man page for details on supported formats.
.IP "\fB\-o\fR \fIobject-names\fR" 10
.IX Item "-o object-names"
A set of comma delimited object names.
.IP "\fB\-\-osimage\fR" 10
.IX Item "--osimage"
Show all the osimage information for the node.
.IP "\fB\-\-nics\fR" 10
.IX Item "--nics"
Show the nics configuration information for the node.
.IP "\fB\-t\fR \fIobject-types\fR" 10
.IX Item "-t object-types"
A set of comma delimited object types. Use the help option to get a list of valid objects.
.IP "\fB\-V|\-\-verbose\fR" 10
.IX Item "-V|--verbose"
Verbose mode.
.IP "\fB\-w\fR \fIattr==val\fR \fB\-w\fR \fIattr=~val\fR ..." 10
.IX Item "-w attr==val -w attr=~val ..."
Use one or multiple \-w flags to specify the selection string that can be used to select objects. The operators ==, !=, =~ and !~ are available. Use the help option to get a list of valid attributes for each object type.
.Sp
Operator descriptions:
        ==        Select nodes where the attribute value is exactly this value.
        !=        Select nodes where the attribute value is not this specific value.
        =~        Select nodes where the attribute value matches this regular expression.
        !~        Select nodes where the attribute value does not match this regular expression.
.Sp
Note: if the \*(L"val\*(R" fields includes spaces or any other characters that will be parsed by shell, the \*(L"attr<operator>val\*(R" needs to be quoted. If the operator is \*(L"!~\*(R", the \*(L"attr<operator>val\*(R" needs to be quoted using single quote.
.IP "\fB\-z|\-\-stanza\fR" 10
.IX Item "-z|--stanza"
Display output in stanza format. See the xcatstanzafile man page for details on using xCAT stanza files.
.SH "RETURN VALUE"
.IX Header "RETURN VALUE"
0 The command completed successfully.
.PP
1 An error has occurred.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.IP "1." 4
To display a description of all the valid attributes that could be used
when defining an xCAT node.
.Sp
.Vb 1
\& lsdef -t node -h
.Ve
.IP "2." 4
To get a list of all the objects that have been defined.
.Sp
.Vb 3
\& lsdef
\&   OR
\& lsdef -a
.Ve
.IP "3." 4
To get all the attributes of the node1
.Sp
.Vb 5
\& lsdef node1
\&   OR
\& lsdef -t node node1
\&   OR
\& lsdef -t node -o node1
.Ve
.IP "4." 4
To get the object name of node1 instead of all the attributes
.Sp
.Vb 1
\& lsdef -s node1
.Ve
.IP "5." 4
To get a list of all the network definitions.
.Sp
.Vb 1
\& lsdef -t network
.Ve
.IP "6." 4
To get a complete listing of all network definitions.
.Sp
.Vb 1
\& lsdef -l -t network
.Ve
.IP "7." 4
To list the whole xCAT database and write it to a stanza file. (backup database)
.Sp
.Vb 1
\& lsdef -a -l -z > mydbstanzafile
.Ve
.IP "8." 4
To list the \s-1MAC\s0 and install adapter name for each node.
.Sp
.Vb 1
\& lsdef -t node -i mac,installnic
.Ve
.IP "9." 4
To list an osimage definition named \*(L"aix53J\*(R".
.Sp
.Vb 1
\& lsdef -t osimage -l -o aix53J
.Ve
.IP "10." 4
.IX Item "10."
To list all node definitions that have a status value of \*(L"booting\*(R".
.Sp
.Vb 1
\& lsdef -t node -w status==booting
.Ve
.IP "11." 4
.IX Item "11."
To list all the attributes of the group \*(L"service\*(R".
.Sp
.Vb 1
\& lsdef -l -t group -o service
.Ve
.IP "12." 4
.IX Item "12."
To list all the attributes of the nodes that are members of the group \*(L"service\*(R".
.Sp
.Vb 1
\& lsdef -t node -l service
.Ve
.IP "13." 4
.IX Item "13."
To get a listing of object definitions that includes information about
what xCAT database tables are used to store the data.
.Sp
.Vb 1
\& lsdef -V -l -t node -o node01
.Ve
.IP "14." 4
.IX Item "14."
To list the hidden nodes that can't be seen with other flags.
The hidden nodes are FSP/BPAs.
.Sp
.Vb 1
\& lsdef -S
.Ve
.IP "15." 4
.IX Item "15."
To list the nodes status and use xcoll to format the output.
.Sp
.Vb 1
\& lsdef -t node -i status -c | xcoll
.Ve
.IP "16." 4
.IX Item "16."
To display the description for some specific attributes that could be used
when defining an xCAT node.
.Sp
.Vb 1
\& lsdef -t node -h -i profile,pprofile
.Ve
.IP "17." 4
.IX Item "17."
To display the nics configuration information for node cn1.
.Sp
.Vb 1
\& lsdef cn1 --nics
.Ve
.SH "FILES"
.IX Header "FILES"
/opt/xcat/bin/lsdef
.SH "NOTES"
.IX Header "NOTES"
This command is part of the xCAT software product.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fImkdef\fR\|(1), \fIchdef\fR\|(1), \fIrmdef\fR\|(1), \fIxcatstanzafile\fR\|(5)
