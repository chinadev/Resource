.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "NODEIMPORT.1 1"
.TH NODEIMPORT.1 1 "2013-06-05" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
\&\fBnodeimport\fR \- Create profiled nodes by importing hostinfo file.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBnodeimport\fR [\-h| \-\-help | \-v | \-\-version]
.PP
\&\fBnodeimport\fR file=<hostinfo\-filename> networkprofile=<network\-profile> imageprofile=<image\-profile> hostnameformat=<node\-name\-format> [hardwareprofile=<hardware\-profile>] [groups=<node\-groups>]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \fBnodeimport\fR command creates nodes by importing a hostinfo file which is following stanza format. In this hostinfo file, we can define node's hostname, ip, mac, switch name, switch port and host location infomation like rack, chassis, start unit, server height...etc
.PP
After nodes imported, the configuration files related with these nodes will be updated automatically. For example: /etc/hosts, dns configuration, dhcp configuration. And the kits node plugins will also be triggered automatically to update kit related configuration/services.
.SH "OPTIONS"
.IX Header "OPTIONS"
\&\fB\-h|\-\-help\fR
.PP
Display usage message.
.PP
\&\fB\-v|\-\-version\fR
.PP
Command Version.
.PP
\&\fBfile=<nodeinfo\-filename\fR>
.PP
Specifies the node information file, where <nodeinfo\-filename> is the full path and file name of the node information file.
.PP
\&\fBimageprofile=<image\-profile\fR>
.PP
Sets the new image profile name used by the node, where <image\-profile> is the new image profile.  An image profile defines the provisioning method, \s-1OS\s0 information, kit information, and provisioning parameters for a node. If the \*(L"_\|_ImageProfile_imgprofile\*(R" group already exists in the nodehm table, then \*(L"imgprofile\*(R" is used as the image profile name.
.PP
\&\fBnetworkprofile=<network\-profile\fR>
.PP
Sets the new network profile name used by the node, where <network\-profile> is the new network profile. A network profile defines the network, \s-1NIC\s0, and routes for a node. If the \*(L"_\|_NetworkProfile_netprofile\*(R" group already exists in the nodehm table, then \*(L"netprofile\*(R" is used as the network profile name.
.PP
\&\fBhardwareprofile=<hardware\-profile\fR>
.PP
Sets the new hardware profile name used by the node, where <hardware\-profile> is the new hardware management profile used by the node. If a \*(L"_\|_HardwareProfile_hwprofile\*(R" group exists, then \*(L"hwprofile\*(R" is the hardware profile name. A hardware profile defines hardware management related information for imported nodes, including: \s-1IPMI\s0, \s-1HMC\s0, \s-1CEC\s0, \s-1CMM\s0.
.PP
\&\fBhostnameformat=<host\-name\-format\fR>
.PP
Sets the node name format for all nodes discovered, where <node\-name\-format> is a supported format. The two types of formats supported are prefix#NNNappendix and prefix#RRand#NNappendix, where wildcard #NNN and #NN are replaced by a system generated number that is based on the provisioning order. Wildcard #RR represents the rack number and stays constant.
.PP
For example, if the node name format is compute\-#NN, the node name is generated as: compute\-00, compute\-01, ... , compute\-99. If the node name format is blade#NNN\-x64, the node name is generated as: blade001\-x64, blade002\-x64, ... , blade999\-x64
.PP
For example, if the node name format is compute\-#RR\-#NN and the rack number is 2, the node name is generated as: compute\-02\-00, compute\-02\-01, ..., compute\-02\-99. If node name format is node\-#NN\-in\-#RR and rack number is 1, the node name is generated as: node\-00\-in\-01, node\-01\-in\-01, ... , node\-99\-in\-01
.PP
\&\fBgroups=<node\-groups\fR>
.PP
Sets the node groups that the imported node belongs to, where <node\-group> is a comma-separated list of node groups.
.SH "RETURN VALUE"
.IX Header "RETURN VALUE"
0  The command completed successfully.
.PP
1  An error has occured while validating parameters.
.PP
2  An error has occured while parsing hostinfo file.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
To import nodes using a profile, follow the following steps:
.PP
1. Find all node groups and profiles, run the following command \*(L"tabdump nodegroups\*(R". For detailed profile information run \*(L"lsdef \-t group <groupname>\*(R". Example of detailed profile information:
.PP
.Vb 7
\&  # tabdump nodegroup
\&  #groupname,grouptype,members,membergroups,wherevals,comments,disable
\&  "compute","static",,,,,
\&  "__HardwareProfile_default_ipmi","static","static",,,,
\&  "__NetworkProfile_default_mn","static","static",,,,
\&  "__NetworkProfile_default_cn","static",,,,,
\&  "__ImageProfile_rhels6.2-x86_64-install-compute","static","static",,,,
.Ve
.PP
.Vb 10
\&  # lsdef -t group __NetworkProfile_default_cn
\&  Object name: __NetworkProfile_default_cn
\&      grouptype=static
\&      installnic=eth0
\&      members=compute-000,compute-001
\&      netboot=xnba
\&      nichostnamesuffixes=eth0:-eth0
\&      nicnetworks=eth0:provision
\&      nictypes=eth0:Ethernet
\&      primarynic=eth0
.Ve
.PP
2. Prepare a node information file. 
.PP
.Vb 7
\&  Example of a node information file, a blade and a rack server defined: 
\&  # hostinfo begin
\&  # This entry defines a blade.
\&  __hostname__:
\&     mac=b8:ac:6f:37:59:24
\&     ip=192.168.1.20
\&     chassis=chassis01
.Ve
.PP
.Vb 7
\&  # This entry defines a rack server.
\&  __hostname__:
\&     mac=b8:ac:6f:37:59:25
\&     ip=192.168.1.20
\&     rack=rack01
\&     height=1
\&     unit=2
.Ve
.PP
.Vb 1
\&  # hostinfo end.
.Ve
.PP
.Vb 9
\&  Another example of a node infomation file, a PureFlex X/P node defined:
\&  # hostinfo begin
\&  # To define a PureFlex P/X node, chassis and slot id must be specified.
\&  # The chassis must be a PureFlex chassis.
\&  __hostname__:
\&     mac=b8:ac:6f:37:59:25
\&     chassis=cmm01
\&     slotid=1
\&  # hostinfo end.
.Ve
.PP
.Vb 6
\&  Example of a node information file, a switch auto discovery node defined: 
\&  # hostinfo begin
\&  # This entry defines a blade.
\&  __hostname__:
\&     switch=myswitch 
\&     switchport=9
.Ve
.PP
The node information file includes the following items:
.PP
\&\fB_\|_hostname_\|_:\fR  This is a mandatory item.
.PP
Description: The name of the node, where _\|_hostname_\|_ is automatically generated by the node name format. You can also input a fixed node name, for example “compute\-node”.
.PP
\&\fBmac=<mac\-address\fR>  This is a mandatory item.
.PP
Description: Specify the \s-1MAC\s0 address for the \s-1NIC\s0 used by the provisionging node, where <mac\-address> is the NICs \s-1MAC\s0 address.
.PP
\&\fBswitch=<switch\-name\fR>  This is a mandatory item, when define a switch auto discovery node.
.PP
Description: Specify switch name that the provisionging node is connected, where <switch\-name> is the switch name.
.PP
\&\fBswitchport=<switch\-port\fR>  This is a mandatory item, when define a switch auto discovery node.
.PP
Description: Specify switch port that the provisionging node is connected, where <switch\-port> is the connected port.
.PP
\&\fBslotid=<slot\-id\fR>  This is a mandatory item while define a PureFlex node.
.PP
Description: The node position in the PureFlex Chassis.
.PP
\&\fBip=<ip\-address\fR> This is an optional item.
.PP
Description: Specify the \s-1IP\s0 address used for provisioning a node, where <ip\-address> is in the form xxx.xxx.xxx.xxx. If this item is not included, the \s-1IP\s0 address used to provision the node is generated automatically according to the Network Profile used by the node.
.PP
\&\fBnicips=<nics\-ip\fR> This is an optional item.
.PP
Description: Lists the \s-1IP\s0 address for each network interface configuration (\s-1NIC\s0) used by the node, excluding the provisioning network, where <nics\-ip> is in the form <nic1>!<nic\-ip1>,<nic2>!<nic\-ip2>,.... For example, if you have 2 network interfaces configured, the nicips attribute should list both network interfaces:  nicips=eth1!10.10.10.11,bmc!192.168.10.3. If the nicips attribute is not specified, the \s-1IP\s0 addresses are generated automatically according to the network profile.
.PP
\&\fBrack=<rack\-name\fR> This is an optional item. 
.PP
Description: node location info. Specify the rack name which this node will be placed into. If not specify this item, there will be no node location info set for this node. this item must be specified together with height + unit.
.PP
\&\fBchasiss=<chassis\-name\fR> This is an optional item.
.PP
Description: node location info, for blade(or PureFlex) only. Specify the chasiss name which this blade will be placed into. this item can not be specified together with rack.
.PP
\&\fBheight=<chassis\-height\fR> This is an optional item.
.PP
Description: node location info, for rack server only. Specify the server height number, in U. this item must be specified together with rack and unit.
.PP
\&\fBunit=<rack\-server\-unit\-location\fR> This is an optional item.
.PP
Description: node location info, for rack server only. Specify the node's start unit number in rack, in U. this item must be specified together with rack and height.
.PP
3. Import the nodes, by using the following commands. Note: If we want to import PureFlex X/P nodes, hardware profile must be set to a PureFlex hardware type.
  nodeimport file=/root/hostinfo.txt networkprofile=default_cn imageprofile=rhels6.3_packaged hostnameformat=compute\-#NNN
.PP
4. After importing the nodes, the nodes are created and all configuration files used by the nodes are updated, including: /etc/hosts, \s-1DNS\s0, \s-1DHCP\s0.
.PP
5. Reboot the nodes. After the nodes are booted they are provisioned automatically.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fInodepurge\fR\|(1), \fInodechprofile\fR\|(1), \fInoderefresh\fR\|(1)
