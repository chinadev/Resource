.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "RVITALS.1 1"
.TH RVITALS.1 1 "2013-02-06" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "Name"
.IX Header "Name"
\&\fBrvitals\fR \- remote hardware vitals
.SH "\fBSynopsis\fP"
.IX Header "Synopsis"
\&\fBrvitals\fR [\fB\-h\fR|\fB\-\-help\fR|\fB\-v\fR|\fB\-\-version\fR]
.Sh "\s-1FSP/LPAR\s0 (with \s-1HMC\s0) specific:"
.IX Subsection "FSP/LPAR (with HMC) specific:"
\&\fBrvitals\fR \fInoderange\fR {\fBtemp\fR|\fBvoltage\fR|\fBlcds\fR|\fBall\fR}
.Sh "CEC/LPAR/Frame (using Direct \s-1FSP\s0 Management ) specific:"
.IX Subsection "CEC/LPAR/Frame (using Direct FSP Management ) specific:"
\&\fBrvitals\fR \fInoderange\fR {\fBrackenv\fR|\fBlcds\fR|\fBall\fR} [\fB\-V\fR| \fB\-\-verbose\fR]
.Sh "\s-1MPA\s0 specific:"
.IX Subsection "MPA specific:"
\&\fBrvitals\fR \fInoderange\fR {\fBtemp\fR|\fBvoltage\fR|\fBwattage\fR|\fBfanspeed\fR|\fBpower\fR|\fBleds\fR|\fBsummary\fR|\fBall\fR}
.Sh "Blade specific:"
.IX Subsection "Blade specific:"
\&\fBrvitals\fR \fInoderange\fR {\fBtemp\fR|\fBwattage\fR|\fBfanspeed\fR|\fBleds\fR|\fBsummary\fR|\fBall\fR}
.Sh "\s-1BMC\s0 specific:"
.IX Subsection "BMC specific:"
\&\fBrvitals\fR \fInoderange\fR {\fBtemp\fR|\fBvoltage\fR|\fBwattage\fR|\fBfanspeed\fR|\fBpower\fR|\fBleds\fR|\fBlcds\fR|\fBsummary\fR|\fBall\fR}
.SH "\fBDescription\fP"
.IX Header "Description"
\&\fBrvitals\fR  retrieves hardware vital information from the on-board Service
Processor for a single or range of nodes and groups.
.SH "\fBOptions\fP"
.IX Header "Options"
.IP "\fBcputemp\fR" 7
.IX Item "cputemp"
Retrieves \s-1CPU\s0 temperatures.
.IP "\fBdisktemp\fR" 7
.IX Item "disktemp"
Retrieves \s-1HD\s0 back plane temperatures.
.IP "\fBambtemp\fR" 7
.IX Item "ambtemp"
Retrieves ambient temperatures.
.IP "\fBtemp\fR" 7
.IX Item "temp"
Retrieves all temperatures.
.IP "\fBvoltage\fR" 7
.IX Item "voltage"
Retrieves power supply and \s-1VRM\s0 voltage readings.
.IP "\fBfanspeed\fR" 7
.IX Item "fanspeed"
Retrieves fan speeds.
.IP "\fBlcds\fR" 7
.IX Item "lcds"
Retrieves LCDs status.
.IP "\fBrackenv\fR" 7
.IX Item "rackenv"
Retrieves rack environmentals.
.IP "\fBleds\fR" 7
.IX Item "leds"
Retrieves LEDs status.
.IP "\fBpower\fR" 7
.IX Item "power"
Retrieves power status.
.IP "\fBpowertime\fR" 7
.IX Item "powertime"
Retrieves total power uptime.  This value only increases, unless
the Service Processor flash gets updated.
.IP "\fBreboot\fR" 7
.IX Item "reboot"
Retrieves  total  number of reboots.  This value only increases,
unless the Service Processor flash gets updated.
.IP "\fBstate\fR" 7
.IX Item "state"
Retrieves the system state.
.IP "\fBall\fR" 7
.IX Item "all"
All of the above.
.IP "\fB\-h\fR|\fB\-\-help\fR" 7
.IX Item "-h|--help"
Print help.
.IP "\fB\-v\fR|\fB\-\-version\fR" 7
.IX Item "-v|--version"
Print version.
.SH "\fBExamples\fP"
.IX Header "Examples"
\&\fBrvitals\fR \fInode5\fR \fIall\fR
.PP
.Vb 21
\& node5: CPU 1 Temperature: + 29.00 C (+ 84.2 F)
\& node5: CPU 2 Temperature: + 19.00 C (+ 66.2 F)
\& node5: DASD Sensor 1 Temperature: + 32.00 C (+ 89.6 F)
\& node5: System Ambient Temperature Temperature: + 26.00 C (+ 78.8 F)
\& node5: +5V Voltage: +  5.01V
\& node5: +3V Voltage: +  3.29V
\& node5: +12V Voltage: + 11.98V
\& node5: +2.5V Voltage: +  2.52V
\& node5: VRM1 Voltage: +  1.61V
\& node5: VRM2 Voltage: +  1.61V
\& node5: Fan 1 Percent of max:   100%
\& node5: Fan 2 Percent of max:   100%
\& node5: Fan 3 Percent of max:   100%
\& node5: Fan 4 Percent of max:   100%
\& node5: Fan 5 Percent of max:   100%
\& node5: Fan 6 Percent of max:   100%
\& node5: Current Power Status On
\& node5: Current LCD1: SuSE Linux
\& node5: Power On Seconds  11855915
\& node5: Number of Reboots   930
\& node5: System State Booting OS or in unsupported OS
.Ve
.SH "\fBSEE ALSO\fP"
.IX Header "SEE ALSO"
\&\fIrpower\fR\|(1), \fIrinv\fR\|(1)
