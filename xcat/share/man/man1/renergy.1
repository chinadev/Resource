.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "RENERGY.1 1"
.TH RENERGY.1 1 "2013-04-16" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "\fBNAME\fP"
.IX Header "NAME"
\&\fBrenergy\fR \- remote energy management tool
.SH "\fBSYNOPSIS\fP"
.IX Header "SYNOPSIS"
\&\fBrenergy\fR [\-h | \-\-help] 
.PP
\&\fBrenergy\fR [\-v | \-\-version] 
.PP
\&\fBPower 6 server specific :\fR
.Sp
.RS 2
\&\fBrenergy\fR \fInoderange\fR [\-V] { all | [savingstatus] [cappingstatus] 
[cappingmaxmin] [cappingvalue] [cappingsoftmin] [averageAC] 
[averageDC] [ambienttemp] [exhausttemp] [CPUspeed] }
.Sp
\&\fBrenergy\fR \fInoderange\fR [\-V] { savingstatus={on | off} 
| cappingstatus={on | off} | cappingwatt=watt 
| cappingperc=percentage } 
.RE
.PP
\&\fBPower 7 server specific :\fR
.Sp
.RS 2
\&\fBrenergy\fR \fInoderange\fR [\-V] { all | [savingstatus] [dsavingstatus] 
[cappingstatus] [cappingmaxmin] [cappingvalue] [cappingsoftmin] 
[averageAC] [averageDC] [ambienttemp] [exhausttemp] [CPUspeed] 
[syssbpower] [sysIPLtime] [fsavingstatus] [ffoMin] [ffoVmin] 
[ffoTurbo] [ffoNorm] [ffovalue]}
.Sp
\&\fBrenergy\fR \fInoderange\fR [\-V] { savingstatus={on | off} 
| dsavingstatus={on\-norm | on-maxp | off}
| fsavingstatus={on | off} | ffovalue=MHZ 
| cappingstatus={on | off} | cappingwatt=watt 
| cappingperc=percentage }
.RE
.PP
\&\fBBladeCenter specific :\fR
.Sp
.RS 2
\&\fBFor Management Modules:\fR
.Sp
.RS 4
\&\fBrenergy\fR \fInoderange\fR [\-V] { all | pd1all | pd2all | [pd1status] 
[pd2status] [pd1policy] [pd2policy] [pd1powermodule1] 
[pd1powermodule2] [pd2powermodule1] [pd2powermodule2] 
[pd1avaiablepower] [pd2avaiablepower] [pd1reservedpower] 
[pd2reservedpower] [pd1remainpower] [pd2remainpower] 
[pd1inusedpower] [pd2inusedpower] [availableDC] [averageAC] 
[thermaloutput] [ambienttemp] [mmtemp] } 
.RE
.RE
.RS 2
.Sp
\&\fBFor a blade server nodes:\fR
.Sp
.RS 4
\&\fBrenergy\fR \fInoderange\fR [\-V] { all | [averageDC]  
[capability] [cappingvalue] [CPUspeed] [maxCPUspeed] 
[savingstatus] [dsavingstatus] }
.Sp
\&\fBrenergy\fR \fInoderange\fR [\-V] { savingstatus={on | off} 
| dsavingstatus={on\-norm | on-maxp | off} }
.RE
.RE
.RS 2
.RE
.PP
\&\fBFlex specific :\fR
.Sp
.RS 2
\&\fBFor Flex Management Modules:\fR
.Sp
.RS 4
\&\fBrenergy\fR \fInoderange\fR [\-V] { all | [powerstatus]
[powerpolicy] [powermodule] [avaiablepower] [reservedpower]
[remainpower] [inusedpower] [availableDC] [averageAC]
[thermaloutput] [ambienttemp] [mmtemp] }
.RE
.RE
.RS 2
.Sp
\&\fBFor Flex node (power and x86):\fR
.Sp
.RS 4
\&\fBrenergy\fR \fInoderange\fR [\-V] { all | [averageDC]
[capability] [cappingvalue] [cappingmaxmin] [cappingmax] 
[cappingmin] [cappingGmin] [CPUspeed] [maxCPUspeed]
[savingstatus] [dsavingstatus] }
.Sp
\&\fBrenergy\fR \fInoderange\fR [\-V] { cappingstatus={on | off}
| cappingwatt=watt | cappingperc=percentage 
| savingstatus={on | off} | dsavingstatus={on\-norm | on-maxp | off} }
.RE
.RE
.RS 2
.RE
.PP
\&\fBiDataPlex specific :\fR
.Sp
.RS 2
\&\fBrenergy\fR \fInoderange\fR [\-V] [ { cappingmaxmin | cappingmax | cappingmin } ]
[cappingstatus] [cappingvalue] [relhistogram]
.Sp
\&\fBrenergy\fR \fInoderange\fR [\-V] { cappingstatus={on | enable | off | disable}
| {cappingwatt|cappingvalue}=watt }
.RE
.SH "\fBDESCRIPTION\fP"
.IX Header "DESCRIPTION"
This \fBrenergy\fR command can be used to manage the energy consumption of
\&\s-1IBM\s0 servers which support \s-1IBM\s0 EnergyScale technology. Through this command, 
user can query and set the power saving and power capping status, and also can 
query the average consumed energy, the ambient and exhaust temperature, 
the processor frequency for a server.
.PP
\&\fBrenergy\fR command supports \s-1IBM\s0 \s-1POWER6\s0 and \s-1POWER7\s0 rack-mounted servers,
BladeCenter management modules, blade servers, and iDataPlex servers. 
For system p rack-mounted servers, the following specific hardware types are supported:
\&\fI8203\-E4A\fR, \fI8204\-E8A\fR, \fI9125\-F2A\fR, \fI8233\-E8B\fR, \fI8236\-E8C\fR.
.PP
The parameter \fInoderange\fR needs to be specified for the \fBrenergy\fR command to 
get the target servers. The \fInoderange\fR should be a list of \s-1CEC\s0 node names, blade 
management module node names or blade server node names. Lpar name
is not acceptable here.
.PP
\&\fBrenergy\fR command can accept multiple of energy attributes to query or one of energy 
attribute to set. If only the attribute name is specified, without the '=', \fBrenergy\fR 
gets and displays the current value. Otherwise, if specifying the attribute with '=' like 
\&'savingstatus=on', \fBrenergy\fR will set the attribute savingstatus to value 'on'. 
.PP
The attributes listed in the \fB\s-1SYNOPSIS\s0\fR section are which ones can be handled by 
\&\fBrenergy\fR command. But for each specific type of server, there are some attributes that
are not supported. If user specifies an attribute which is not supported by a specific
server, the return value of this attribute will be 'na'.
.PP
The supported attributes for each specific system p hardware type is listed as follows:
.Sp
.RS 2
\&\fB8203\-E4A\fR, \fB8204\-E8A\fR 
.Sp
.RS 4
Supported attributes: 
.Sp
\&\fBQuery\fR: savingstatus,cappingstatus,cappingmin,cappingmax,
cappingvalue,cappingsoftmin,averageAC,averageDC,ambienttemp,
exhausttemp,CPUspeed
.Sp
\&\fBSet\fR:   savingstatus,cappingstatus,cappingwatt,cappingperc
.RE
.RE
.RS 2
.Sp
\&\fB9125\-F2A\fR 
.Sp
.RS 4
Supported attributes: 
.Sp
\&\fBQuery\fR: savingstatus,averageAC,ambienttemp,exhausttemp,
CPUspeed 
.Sp
\&\fBSet\fR:   savingstatus
.RE
.RE
.RS 2
.Sp
\&\fB8233\-E8B\fR, \fB8236\-E8C\fR
.Sp
.RS 4
Supported attributes:
.Sp
\&\fBQuery\fR: savingstatus,dsavingstatus,cappingstatus,cappingmin,
cappingmax,cappingvalue,cappingsoftmin,averageAC,averageDC,
ambienttemp,exhausttemp,CPUspeed,syssbpower,sysIPLtime
.Sp
\&\fBSet\fR:   savingstatus,dsavingstatus,cappingstatus,cappingwatt,
cappingperc
.RE
.RE
.RS 2
.Sp
\&\fB9125\-F2C\fR
.Sp
.RS 4
Supported attributes:
.Sp
\&\fBQuery\fR: savingstatus,dsavingstatus,cappingstatus,cappingmin,
cappingmax,cappingvalue,cappingsoftmin,averageAC,averageDC,
ambienttemp,exhausttemp,CPUspeed,syssbpower,sysIPLtime,
fsavingstatus,ffoMin,ffoVmin,ffoTurbo,ffoNorm,ffovalue
.Sp
\&\fBSet\fR:   savingstatus,dsavingstatus,cappingstatus,cappingwatt,
cappingperc,fsavingstatus,ffovalue
.RE
.RE
.RS 2
.RE
.PP
Note:
For system P \s-1CEC\s0 nodes, each query operation for attribute CPUspeed, averageAC 
or averageDC needs about 30 seconds to complete. The query for others attributes
will get response immediately.
.SH "\fBPREREQUISITES\fP"
.IX Header "PREREQUISITES"
For the system p nodes, the \fBrenergy\fR command depends 
on the Energy Management Plugin \fBxCAT-pEnergy\fR to 
communicate with server.  \fBxCAT-pEnergy\fR can be downloaded from the \s-1IBM\s0 web site: 
http://www.ibm.com/support/fixcentral/. (Other Software \-> \s-1EM\s0)
.PP
For iDataPlex nodes, the \fBrenergy\fR command depends 
on the Energy Management Plugin \fBxCAT-xEnergy\fR to 
communicate with server.  This plugin must be requested from \s-1IBM\s0.
.PP
(The support for BladeCenter energy management is built into base xCAT,
so no additional plugins are needed for BladeCenter.)
.SH "\fBOPTIONS\fP"
.IX Header "OPTIONS"
.IP "\fB\-h | \-\-help\fR" 4
.IX Item "-h | --help"
Display the usage message.
.IP "\fB\-v | \-\-version\fR" 4
.IX Item "-v | --version"
Display the version information.
.IP "\fB\-V\fR" 4
.IX Item "-V"
Verbose output.
.IP "\fBall\fR" 4
.IX Item "all"
Query all energy attributes which supported by the specific 
type of hardware.
.IP "\fBpd1all\fR" 4
.IX Item "pd1all"
Query all energy attributes of the power domain 1 for blade
management module node.
.IP "\fBpd2all\fR" 4
.IX Item "pd2all"
Query all energy attributes of the power domain 2 for blade
management module node.
.IP "\fBambienttemp\fR" 4
.IX Item "ambienttemp"
Query the current ambient temperature. (Unit is centigrade)
.IP "\fBavailableDC\fR" 4
.IX Item "availableDC"
Query the total \s-1DC\s0 power available for the entire blade center chassis.
.IP "\fBaverageAC\fR" 4
.IX Item "averageAC"
Query the average power consumed (Input). (Unit is watt)
.Sp
Note: For 9125\-F2A,9125\-F2C server, the value of attribute 
averageAC is the aggregate for all of the servers in a rack.
.Sp
Note: For Blade Center, the value of attribute 
averageAC is the total \s-1AC\s0 power being consumed by all modules
 in the chassis. It also includes power consumed by the Chassis 
Cooling Devices for \s-1BCH\s0 chassis.
.IP "\fBaverageDC\fR" 4
.IX Item "averageDC"
Query the average power consumed (Output). (Unit is watt)
.IP "\fBcapability\fR" 4
.IX Item "capability"
Query the Power Capabilities of the blade server.
.Sp
staticPowerManagement: the module with the static worst case power values.
.Sp
fixedPowermanagement: the module with the static power values but ability 
to throttle.
.Sp
dynamicPowerManagement: the module with power meter capability, measurement 
enabled, but capping disabled.
.Sp
dynamicPowerMeasurement1: the module with power meter capability, measurement 
enabled, phase 1 only
.Sp
dynamicPowerMeasurement2: the module with power meter capability, measurement 
enabled, phase 2 or higher
.Sp
dynamicPowerMeasurementWithPowerCapping: the module with power meter capability, 
both measurement and capping enabled, phase 2 or higher
.IP "\fBcappingGmin\fR" 4
.IX Item "cappingGmin"
Query the Guaranteed Minimum power capping value in watts.
.IP "\fBcappingmax\fR" 4
.IX Item "cappingmax"
Query the Maximum of power capping value in watts.
.IP "\fBcappingmaxmin\fR" 4
.IX Item "cappingmaxmin"
Query the Maximum and Minimum of power capping value in watts.
.IP "\fBcappingmin\fR" 4
.IX Item "cappingmin"
Query the Minimum of power capping value in watts.
.IP "\fBcappingperc\fR=\fBpercentage\fR" 4
.IX Item "cappingperc=percentage"
Set the power capping value base on the percentage of 
the max-min of capping value which getting from 
\&\fIcappingmaxmim\fR attribute. The valid value must be 
from 0 to 100.
.IP "\fBcappingsoftmin\fR" 4
.IX Item "cappingsoftmin"
Query the minimum value that can be assigned to power 
capping without guaranteed enforceability. (Unit is watt)
.IP "\fBcappingstatus\fR" 4
.IX Item "cappingstatus"
Query the power capping status. The result should be 'on' 
or 'off'.
.IP "\fBcappingstatus\fR={\fBon\fR | \fBoff\fR}" 4
.IX Item "cappingstatus={on | off}"
Set the power capping status. The value must be 'on' 
or 'off'. This is the switch to turn on or turn off the 
power capping function.
.IP "\fBcappingvalue\fR" 4
.IX Item "cappingvalue"
Query the current power capping value. (Unit is watt)
.IP "\fBcappingwatt\fR=\fBwatt\fR" 4
.IX Item "cappingwatt=watt"
Set the power capping value base on the watt unit.
.Sp
If the 'watt' >  maximum of \fIcappingmaxmin\fR or 'watt' 
< \fIcappingsoftmin\fR, the setting operation 
will be failed. If the 'watt' > \fIcappingsoftmin\fR and 
\&'watt' < minimum of \fIcappingmaxmin\fR, the value can \s-1NOT\s0 be 
guaranteed.
.IP "\fBCPUspeed\fR" 4
.IX Item "CPUspeed"
Query the effective processor frequency. (Unit is MHz)
.IP "\fBdsavingstatus\fR" 4
.IX Item "dsavingstatus"
Query the dynamic power saving status. The result should 
be 'on\-norm', 'on\-maxp'  or 'off'. 
.Sp
If turning on the dynamic power saving, the processor 
frequency and voltage will be dropped dynamically based on 
the core utilization. It supports two modes for turn on state: 
.Sp
\&\fIon-norm\fR \- means normal, the processor frequency cannot 
exceed the nominal value; 
.Sp
\&\fIon-maxp\fR \- means maximum performance, the processor 
frequency can exceed the nominal value.
.IP "\fBdsavingstatus\fR={\fBon-norm\fR | \fBon-maxp\fR | \fBoff\fR}" 4
.IX Item "dsavingstatus={on-norm | on-maxp | off}"
Set the dynamic power saving. The value must be 'on\-norm', 
\&'on\-maxp' or 'off'.
.Sp
The dsavingstatus setting operation needs about 2 minutes 
to take effect. (The used time depends on the hardware type)
.Sp
The \fBdsavingstatus\fR only can be turned on when the 
\&\fBsavingstatus\fR is in turn off status.
.IP "\fBexhausttemp\fR" 4
.IX Item "exhausttemp"
Query the current exhaust temperature. (Unit is centigrade)
.IP "\fBffoMin\fR" 4
.IX Item "ffoMin"
Query the minimum cpu frequency which can be set for \s-1FFO\s0. (Fixed 
Frequency Override)
.IP "\fBffoNorm\fR" 4
.IX Item "ffoNorm"
Query the maximum cpu frequency which can be set for \s-1FFO\s0. 
.IP "\fBffoTurbo\fR" 4
.IX Item "ffoTurbo"
Query the advertised maximum cpu frequency (selling point). 
.IP "\fBffoVmin\fR" 4
.IX Item "ffoVmin"
Query the minimum cpu frequency which can be set for dropping down 
the voltage to save power. That means when you drop the cpu 
frequency from the ffoVmin to ffoVmin, the voltage won't change, 
then there's no obvious power to be saved.
.IP "\fBffovalue\fR" 4
.IX Item "ffovalue"
Query the current value of \s-1FFO\s0.
.IP "\fBffovalue\fR=\fB\s-1MHZ\s0\fR" 4
.IX Item "ffovalue=MHZ"
Set the current value of \s-1FFO\s0. The valid value of ffovalue should 
be between the ffoMin and ffoNorm.
.Sp
Note1: Due to the limitation of firmware, the frequency in the range 
3501 MHz \- 3807 MHz can \s-1NOT\s0 be set to ffovalue. This range may be 
changed in future.
.Sp
Note2: The setting will take effect only when the fsavingstatus is in 
\&'on' status. But you need to set the ffovalue to a valid value before 
enabling the fsavingstatus. (It's a limitation of the initial firmware 
and will be fixed in future.) 
.Sp
The ffovalue setting operation needs about 1 minute to take effect.
.IP "\fBfsavingstatus\fR" 4
.IX Item "fsavingstatus"
Query the status of \s-1FFO\s0. The result should be 'on' or 'off'. 
\&'on' \- enable; 'off' \- disable.
.IP "\fBfsavingstatus\fR={\fBon\fR │ \fBoff\fR}" 4
.IX Item "fsavingstatus={on │ off}"
Set the status of \s-1FFO\s0. The value must be 'on' or 'off'.
.Sp
\&'on' \- enable. It will take effect only when the \fBffovalue\fR 
has been set to a valid value.
.Sp
\&'off' \-disable. It will take effect immediately.
.Sp
Note: See the Note2 of ffovalue=MHZ.
.IP "\fBmaxCPUspeed\fR" 4
.IX Item "maxCPUspeed"
Query the maximum processor frequency. (Unit is MHz)
.IP "\fBmmtemp\fR" 4
.IX Item "mmtemp"
Query the current temperature of management module. 
(Unit is centigrade)
.IP "\fBpd1status | powerstatus\fR" 4
.IX Item "pd1status | powerstatus"
Query the status of power domain 1 for blade management 
module node.
.Sp
Note: for the attribute without the leading 'pd1' which 
means there's only one power doamin in the chassis.
.IP "\fBpd1policy | powerpolicy\fR" 4
.IX Item "pd1policy | powerpolicy"
Query the power management policy of power domain 1. 
.IP "\fBpd1powermodule1 | powermodule\fR" 4
.IX Item "pd1powermodule1 | powermodule"
Query the First Power Module capacity in power domain 1.
.IP "\fBpd1powermodule2 | powermodule\fR" 4
.IX Item "pd1powermodule2 | powermodule"
Query the Second Power Module capacity in power domain 1.
.IP "\fBpd1avaiablepower | avaiablepower\fR" 4
.IX Item "pd1avaiablepower | avaiablepower"
Query the total available power in power domain 1.
.IP "\fBpd1reservedpower | reservedpower\fR" 4
.IX Item "pd1reservedpower | reservedpower"
Query the power that has been reserved for power domain 1.
.IP "\fBpd1remainpower | remainpower\fR" 4
.IX Item "pd1remainpower | remainpower"
Query the remaining power available in power domain 1.
.IP "\fBpd1inusedpower | inusedpower\fR" 4
.IX Item "pd1inusedpower | inusedpower"
Query the total power being used in power domain 1.
.IP "\fBpd2status\fR" 4
.IX Item "pd2status"
Query the status of power domain 2 for blade management 
module node.
.IP "\fBpd2policy\fR" 4
.IX Item "pd2policy"
Query the power management policy of power domain 2.
.IP "\fBpd2powermodule1\fR" 4
.IX Item "pd2powermodule1"
Query the First Power Module capacity in power domain 2.
.IP "\fBpd2powermodule2\fR" 4
.IX Item "pd2powermodule2"
Query the Second Power Module capacity in power domain 2.
.IP "\fBpd2avaiablepower\fR" 4
.IX Item "pd2avaiablepower"
Query the total available power in power domain 2.
.IP "\fBpd2reservedpower\fR" 4
.IX Item "pd2reservedpower"
Query the power that has been reserved for power domain 2.
.IP "\fBpd2remainpower\fR" 4
.IX Item "pd2remainpower"
Query the remaining power available in power domain 2.
.IP "\fBpd2inusedpower\fR" 4
.IX Item "pd2inusedpower"
Query the total power being used in power domain 2.
.IP "\fBrelhistogram\fR" 4
.IX Item "relhistogram"
Query histogram data for wattage information
.IP "\fBsavingstatus\fR" 4
.IX Item "savingstatus"
Query the static power saving status. The result should be 
\&'on' or 'off'. 'on' \- enable; 'off' \- disable.
.IP "\fBsavingstatus\fR={\fBon\fR | \fBoff\fR}" 4
.IX Item "savingstatus={on | off}"
Set the static power saving. The value must be 'on' or 'off'. 
.Sp
If turning on the static power saving, the processor frequency 
and voltage will be dropped to a fixed value to save energy.
.Sp
The savingstatus setting operation needs about 2 minutes to 
take effect. (The used time depends on the hardware type)
.Sp
The \fBsavingstatus\fR only can be turned on when the 
\&\fBdsavingstatus\fR is in turn off status.
.IP "\fBsysIPLtime\fR" 4
.IX Item "sysIPLtime"
Query the time used from \s-1FSP\s0 standby to \s-1OS\s0 standby. 
(Unit is Second)
.IP "\fBsyssbpower\fR" 4
.IX Item "syssbpower"
Query the system power consumed prior to power on. 
(Unit is MHz)
.IP "\fBthermaloutput\fR" 4
.IX Item "thermaloutput"
Query the thermal output (load) in BTUs per hour for the blade 
center chassis.
.SH "\fBRETURN VALUE\fP"
.IX Header "RETURN VALUE"
0 The command completed successfully.
.PP
1 An error has occurred.
.SH "\fBEXAMPLES\fP"
.IX Header "EXAMPLES"
.IP "1" 3
.IX Item "1"
Query all the attributes which \s-1CEC1\s0,CEC2 supported.
.Sp
\&\fBrenergy\fR \s-1CEC1\s0,CEC2 all
.Sp
The output of the query operation:
.Sp
.Vb 25
\&    CEC1: savingstatus: off
\&    CEC1: dsavingstatus: off
\&    CEC1: cappingstatus: off
\&    CEC1: cappingmin: 1953 W
\&    CEC1: cappingmax: 2358 W
\&    CEC1: cappingvalue: 2000 W
\&    CEC1: cappingsoftmin: 304 W
\&    CEC1: averageAC: na
\&    CEC1: averageDC: na
\&    CEC1: ambienttemp: na
\&    CEC1: exhausttemp: na
\&    CEC1: CPUspeed: na
\&    CEC1: syssbpower: 40 W
\&    CEC1: sysIPLtime: 900 S
\&    CEC2: savingstatus: off
\&    CEC2: cappingstatus: off
\&    CEC2: cappingmin: 955 W
\&    CEC2: cappingmax: 1093 W
\&    CEC2: cappingvalue: 1000 W
\&    CEC2: cappingsoftmin: 226 W
\&    CEC2: averageAC: 627 W
\&    CEC2: averageDC: 531 W
\&    CEC2: ambienttemp: 25 C
\&    CEC2: exhausttemp: 40 C
\&    CEC2: CPUspeed: 4695 MHz
.Ve
.IP "2" 3
.IX Item "2"
Query all the attirbutes for management module node \s-1MM1\s0. (For chassis)
.Sp
\&\fBrenergy\fR \s-1MM1\s0 all
.Sp
The output of the query operation:
.Sp
.Vb 22
\&    mm1: availableDC: 5880W
\&    mm1: frontpaneltmp: 18.00 Centigrade
\&    mm1: inusedAC: 2848W
\&    mm1: mmtmp: 28.00 Centigrade
\&    mm1: pd1avaiablepower: 2940W
\&    mm1: pd1inusedpower: 848W
\&    mm1: pd1policy: redundantWithoutPerformanceImpact
\&    mm1: pd1powermodule1: Bay 1: 2940W
\&    mm1: pd1powermodule2: Bay 2: 2940W
\&    mm1: pd1remainpower: 1269W
\&    mm1: pd1reservedpower: 1671W
\&    mm1: pd1status: 1 - Power domain status is good.
\&    mm1: pd2avaiablepower: 2940W
\&    mm1: pd2inusedpower: 1490W
\&    mm1: pd2policy: redundantWithoutPerformanceImpact
\&    mm1: pd2powermodule1: Bay 3: 2940W
\&    mm1: pd2powermodule2: Bay 4: 2940W
\&    mm1: pd2remainpower: 51W
\&    mm1: pd2reservedpower: 2889W
\&    mm1: pd2status: 2 - Warning: Power redundancy does not exist 
\&in this power domain.
\&    mm1: thermaloutput: 9717.376000 BTU/hour
.Ve
.IP "3" 3
.IX Item "3"
Query all the attirbutes for blade server node blade1.
.Sp
\&\fBrenergy\fR blade1 all
.Sp
The output of the query operation:
.Sp
.Vb 7
\&    blade1: CPUspeed: 4204MHZ
\&    blade1: averageDC: 227W
\&    blade1: capability: dynamicPowerMeasurement2
\&    blade1: cappingvalue: 315W
\&    blade1: dsavingstatus: off
\&    blade1: maxCPUspeed: 4204MHZ
\&    blade1: savingstatus: off
.Ve
.IP "4" 3
.IX Item "4"
Query the attributes savingstatus, cappingstatus 
and CPUspeed for server \s-1CEC1\s0.
.Sp
\&\fBrenergy\fR \s-1CEC1\s0 savingstatus cappingstatus CPUspeed
.Sp
The output of the query operation:
.Sp
.Vb 3
\&    CEC1: savingstatus: off
\&    CEC1: cappingstatus: on
\&    CEC1: CPUspeed: 3621 MHz
.Ve
.IP "5" 3
.IX Item "5"
Turn on the power saving function of \s-1CEC1\s0.
.Sp
\&\fBrenergy\fR \s-1CEC1\s0 savingstatus=on
.Sp
The output of the setting operation:
.Sp
.Vb 2
\&    CEC1: Set savingstatus succeeded.         
\&    CEC1: This setting may need some minutes to take effect.
.Ve
.IP "6" 3
.IX Item "6"
Set the power capping value base on the percentage of the 
max-min capping value. Here, set it to 50%.
.Sp
\&\fBrenergy\fR \s-1CEC1\s0 cappingperc=50
.Sp
If the maximum capping value of the \s-1CEC1\s0 is 850w, and the 
minimum capping value of the \s-1CEC1\s0 is 782w, the Power Capping 
value will be set as ((850\-782)*50% + 782) = 816w.
.Sp
The output of the setting operation:
.Sp
.Vb 2
\&    CEC1: Set cappingperc succeeded.
\&    CEC1: cappingvalue: 816
.Ve
.SH "\fBREFERENCES\fP"
.IX Header "REFERENCES"
.IP "1" 3
.IX Item "1"
For more information on 'Power System Energy Management':
.Sp
.Vb 1
\&    http://www-03.ibm.com/systems/power/software/energy/index.html
.Ve
.IP "2" 3
.IX Item "2"
EnergyScale white paper for Power6:
.Sp
.Vb 1
\&    http://www-03.ibm.com/systems/power/hardware/whitepapers/energyscale.html
.Ve
.IP "3" 3
.IX Item "3"
EnergyScale white paper for Power7:
.Sp
.Vb 1
\&    http://www-03.ibm.com/systems/power/hardware/whitepapers/energyscale7.html
.Ve
.SH "\fBFILES\fP"
.IX Header "FILES"
/opt/xcat/bin/renergy
