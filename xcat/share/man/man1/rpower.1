.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "RPOWER.1 1"
.TH RPOWER.1 1 "2013-04-22" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
\&\fBrpower\fR \- remote power control of nodes
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBrpower\fR \fInoderange\fR [\fB\-\-nodeps\fR] [\fBon\fR|\fBonstandby\fR|\fBoff\fR|\fBsuspend\fR|\fBstat\fR|\fBstate\fR|\fBreset\fR|\fBboot\fR] [\fB\-m\fR \fItable.column\fR==\fIexpectedstatus\fR [\fB\-m\fR \fItable.column\fR=~\fIexpectedstatus\fR]] [\fB\-t\fR \fItimeout\fR] [\fB\-r\fR \fIretrycount\fR]
.PP
\&\fBrpower\fR [\fB\-h\fR|\fB\-\-help\fR|\fB\-v\fR|\fB\-\-version\fR]
.Sh "\s-1BMC\s0 (using \s-1IPMI\s0) specific:"
.IX Subsection "BMC (using IPMI) specific:"
\&\fBrpower\fR \fInoderange\fR [\fBon\fR|\fBoff\fR|\fBsoftoff\fR|\fBreset\fR|\fBboot\fR|\fBstat\fR|\fBstate\fR|\fBstatus\fR|\fBwake\fR|\fBsuspend\fR [\fB\-w\fR \fItimeout\fR] [\fB\-o\fR] [\fB\-r\fR]] 
.Sh "\s-1PPC\s0 (with \s-1IVM\s0 or \s-1HMC\s0) specific:"
.IX Subsection "PPC (with IVM or HMC) specific:"
\&\fBrpower\fR \fInoderange\fR [\fB\-\-nodeps\fR] {\fBof\fR}
.Sh "\s-1PPC\s0 (with \s-1HMC\s0) specific:"
.IX Subsection "PPC (with HMC) specific:"
\&\fBrpower\fR \fInoderange\fR [\fBonstandby\fR]
.PP
\&\fBrpower\fR \fInoderange\fR [\fBsoftoff\fR]
.Sh "\s-1CEC\s0 (using Direct \s-1FSP\s0 Management) specific:"
.IX Subsection "CEC (using Direct FSP Management) specific:"
\&\fBrpower\fR \fInoderange\fR [\fBonstandby\fR|\fBstat\fR|\fBstate\fR] [\fB\-T tooltype\fR]
.PP
\&\fBrpower\fR \fInoderange\fR [\fBon\fR|\fBoff\fR|\fBlowpower\fR|\fBresetsp\fR]
.Sh "Frame (using Direct \s-1FSP\s0 Management) specific:"
.IX Subsection "Frame (using Direct FSP Management) specific:"
\&\fBrpower\fR \fInoderange\fR [\fBrackstandby\fR|\fBexit_rackstandby\fR|\fBstat\fR|\fBstate\fR|\fBresetsp\fR]
.Sh "Blade (using Direct \s-1FSP\s0 Management) specific:"
.IX Subsection "Blade (using Direct FSP Management) specific:"
\&\fBrpower\fR \fInoderange\fR [\fBon\fR|\fBonstandby\fR|\fBoff\fR|\fBstat\fR|\fBstate\fR|\fBsms\fR]
.Sh "Blade specific:"
.IX Subsection "Blade specific:"
\&\fBrpower\fR \fInoderange\fR [\fBcycle\fR|\fBsoftoff\fR] 
.Sh "zVM specific:"
.IX Subsection "zVM specific:"
\&\fBrpower\fR \fInoderange\fR [\fBon\fR|\fBoff\fR|\fBreset\fR|\fBstat\fR|\fBsoftoff\fR]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBrpower\fR controls the power for a single or range of nodes,  via the out-of-band path.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fBon\fR" 4
.IX Item "on"
Turn power on.
.IP "\fBonstandby\fR" 4
.IX Item "onstandby"
Turn power on to standby state
.IP "\fB\-T\fR" 4
.IX Item "-T"
The value could be \fBlpar\fR or \fBfnm\fR. The tooltype value \fBlpar\fR is for xCAT and \fBfnm\fR is for \s-1CNM\s0. The default value is "\fBlpar\fR\*(L". For cold start in the large cluster, it will save a lot of time if the admins use \*(R"\fBrpower\fR \fInoderange\fR \fBonstandby\fR \fB\-T\fR \fBfnm\fR" to power on all the CECs from the management node through the \fBfnm\fR connections.
.IP "\fBlowpower\fR" 4
.IX Item "lowpower"
Turn \s-1CEC\s0 to low power state (state \s-1EOCT\s0). This is a disruptive operation which requires the \s-1CEC\s0 to be powered off prior to entering low power mode. And we can use power off command to get out of lowepower state.
.IP "\fBrackstandby\fR" 4
.IX Item "rackstandby"
Places the rack in the rack standby state. It requires that all CECs and \s-1DE\s0 be powered off before it will run.
.IP "\fBexit_rackstandby\fR" 4
.IX Item "exit_rackstandby"
Exit Rack standby will be the default state that a rack goes into when power is initially applied to the rack. It simply moves the \s-1BPA\s0 from Rack standby to both bpa's in standby state.
.IP "\fBresetsp\fR" 4
.IX Item "resetsp"
Reboot the service processor. If there are primary and secondary FSPs/BPAs of one cec/frame, it will reboot them almost at the sametime.
.IP "\fBsoftoff\fR" 4
.IX Item "softoff"
Attempt to request clean shutdown of \s-1OS\s0 (may not detect failures in completing command)
.Sp
For stateless osimage, the 'acpid' package needs to be added to the .pkglist configuration file for the stateless osimage to enable the 'softoff' function.
.IP "\fBoff\fR" 4
.IX Item "off"
Turn power off.
.IP "\fBsuspend\fR" 4
.IX Item "suspend"
Suspend the target nodes execution.
.Sp
The \fBsuspend\fR action could be run together with \fB\-w\fR \fB\-o\fR \fB\-r\fR.
.Sp
Refer to the following steps to enable the \fBsuspend\fR function:
.Sp
1. Add the 'acpid' and 'suspend' package to the .pkglist of your osimage so that the required package could be installed correctly to your target system.
.Sp
2. Add two configuration files for the base function:
.Sp
.Vb 2
\& /etc/pm/config.d/suspend
\&     S2RAM_OPTS="--force --vbe_save --vbe_post --vbe_mode"
.Ve
.Sp
.Vb 3
\& /etc/acpi/events/suspend_event
\&     event=button/sleep.*
\&     action=/usr/sbin/pm-suspend
.Ve
.Sp
3. Add the hook files for your specific applications which need specific action before or after the suspend action.
.Sp
Refer to the 'pm\-utils' package for how to create the specific hook files.
.IP "\fBwake\fR" 4
.IX Item "wake"
Wake up the target nodes which is in \fBsuspend\fR state.
.Sp
Don't try to run \fBwake\fR against the 'on' state node, it would cause the node gets to 'off' state.
.IP "\fBstat\fR|\fBstate\fR" 4
.IX Item "stat|state"
Print the current power state/status.
.IP "\fBreset\fR" 4
.IX Item "reset"
Send a hard reset.
.IP "\fBboot\fR" 4
.IX Item "boot"
If off, then power on.
If on, then hard reset.
This option is recommended over \fBcycle\fR.
.IP "\fBcycle\fR" 4
.IX Item "cycle"
Power off, then on.
.IP "\fBof\fR" 4
.IX Item "of"
Boot the node to open firmware console mode.
.IP "\fBsms\fR" 4
.IX Item "sms"
Boot the node to open firmware \s-1SMS\s0 menu mode.
.IP "\fB\-m\fR \fItable.column\fR==\fIexpectedstatus\fR \fB\-m\fR \fItable.column\fR=~\fIexpectedstatus\fR" 4
.IX Item "-m table.column==expectedstatus -m table.column=~expectedstatus"
Use one or multiple \fB\-m\fR flags to specify the node attributes and the expected status for the node installation monitoring and automatic retry mechanism. The operators ==, !=, =~ and !~ are valid. This flag must be used with \-t flag.
.Sp
Note: if the \*(L"val\*(R" fields includes spaces or any other characters that will be parsed by shell, the \*(L"attr<oper\-ator>val\*(R" needs to be quoted. If the operator is \*(L"!~\*(R", the \*(L"attr<operator>val\*(R" needs to be quoted using single quote.
.IP "\fB\-\-nodeps\fR" 4
.IX Item "--nodeps"
Do not use dependency table (default is to use dependency table). Valid only with \fBon|off|boot|reset|cycle\fR for blade power method and \fBon|off|reset|softoff\fR for hmc/fsp power method.
.IP "\fB\-r\fR \fIretrycount\fR" 4
.IX Item "-r retrycount"
specify the number of retries that the monitoring process will perform before declare the failure. The default value is 3. Setting the retrycount to 0 means only monitoring the os installation progress and will not re-initiate the installation if the node status has not been changed to the expected value after timeout. This flag must be used with \-m flag.
.IP "\fB\-t\fR \fItimeout\fR" 4
.IX Item "-t timeout"
Specify the the timeout, in minutes, to wait for the expectedstatus specified by \-m flag. This is a required flag if the \-m flag is specified.
.Sp
Power off, then on.
.IP "\fB\-w\fR \fItimeout\fR" 4
.IX Item "-w timeout"
To set the \fItimeout\fR for the \fBsuspend\fR action to wait for the success.
.IP "\fB\-o\fR" 4
.IX Item "-o"
To specify that the target node will be power down if \fBsuspend\fR action failed.
.IP "\fB\-r\fR" 4
.IX Item "-r"
To specify that the target node will be reset if \fBsuspend\fR action failed.
.IP "\fB\-h\fR|\fB\-\-help\fR" 4
.IX Item "-h|--help"
Prints out a brief usage message.
.IP "\fB\-v\fR|\fB\-\-version\fR" 4
.IX Item "-v|--version"
Display the version number.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.IP "\(bu" 3
.Vb 1
\& rpower node4,node5 stat
.Ve
.Sp
.Vb 2
\& node4: on
\& node5: off
.Ve
.IP "\(bu" 3
.Vb 1
\& rpower node5 on
.Ve
.Sp
.Vb 1
\& node5: on
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fInoderange\fR\|(3), \fIrcons\fR\|(1), \fIrinv\fR\|(1), \fIrvitals\fR\|(1), \fIrscan\fR\|(1)
