.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "WCONS.1 1"
.TH WCONS.1 1 "2013-02-06" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "Name"
.IX Header "Name"
wcons \- windowed remote console
.SH "\fBSynopsis\fP"
.IX Header "Synopsis"
\&\fBwcons\fR  [\fB\-t\fR|\fB\-\-tile\fR=\fIn\fR] [\fIxterm-options\fR] \fInoderange\fR
.PP
\&\fBwcons\fR [\fB\-h\fR|\fB\-\-help\fR|\fB\-v\fR|\fB\-\-version\fR]
.SH "\fBDescription\fP"
.IX Header "Description"
\&\fBwcons\fR provides access to the remote node serial console of a single  or
range or nodes or groups.
.PP
\&\fBwcons\fR  is a simple front-end to rcons in an xterm session for each console.
.SH "\fBOptions\fP"
.IX Header "Options"
.IP "\fB\-t\fR|\fB\-\-tile\fR=\fIn\fR" 5
.IX Item "-t|--tile=n"
Tile \fBwcons\fR windows from top left to bottom right.  If \fIn\fR is spec\-
ified  then  tile  \fIn\fR across.  If \fIn\fR is not specified then tile to
edge of screen.  If tiled \fBwcons\fR windows reach bottom right, then
the windows start at top left overlaying existing \fBwcons\fR windows.
.IP "\fB\-h\fR|\fB\-\-help\fR" 5
.IX Item "-h|--help"
Print help.
.IP "\fB\-v\fR|\fB\-\-version\fR" 5
.IX Item "-v|--version"
Print version.
.IP "\fIxterm options\fR" 5
.IX Item "xterm options"
See \fIxterm\fR\|(1). Any options other than those listed above are passed
directly to xterm. \fBNote:\fR when given multiple nodes, wcons will
override \fB\-title\fR and tries to figure out optimal \fB\-geometry\fR
options for the xterms (however, \fB\-geometry\fR can still be
specified).
.SH "\fBFiles\fP"
.IX Header "Files"
\&\fBnodehm\fR table \-
xCAT  node hardware management table.  See \fInodehm\fR\|(5) for further details.  This is used  to  determine  the  console  access
method.
.SH "\fBExamples\fP"
.IX Header "Examples"
\&\fBwcons\fR \fInode1\-node5\fR
.PP
\&\fBwcons\fR \fB\-\-tile\fR \fB\-\-font\fR=\fInil2\fR \fIall\fR
.PP
\&\fBwcons\fR \fB\-t\fR \fI4\fR \fInode1\-node16\fR
.PP
\&\fBwcons\fR \fB\-f\fR \fIvs\fR \fB\-t\fR \fI4\fR \fInode1\-node4\fR
.SH "\fBBugs\fP"
.IX Header "Bugs"
Tile mode assumes that the width of the left window border is also  the
width  of  the  right  and  bottom window border.  Most window managers
should not have a problem.  If you really need  support  for  a  screwy
window manager let me know.
.SH "\fBSee\fP \fBAlso\fP"
.IX Header "See Also"
\&\fInoderange\fR\|(3), \fIrcons\fR\|(1), \fIxterm\fR\|(1)
